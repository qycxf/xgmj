// Code generated by protoc-gen-go.
// source: request.proto
// DO NOT EDIT!

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	request.proto
	response.proto

It has these top-level messages:
	RequestCmd
	ReqHead
	ReqSimple
	ReqCreateTalble
	ResponseCmd
	RespHead
	RespSimple
	RoomInfo
	PlayerInfo
	SeatInfo
	SeatOpts
	PGInfo
	SendTip
	TableInfo
	ZhuaNiaoInfo
	ExecOpt
	TableCfg
	ScoreChange
	SeatResult
	GameResult
	ChatInfo
	WordChat
	GameRecord
	GameRecItem
	RespTableInfoRec
	OuterMsg
*/
package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ReqSimple_SimpleTag int32

const (
	ReqSimple_LOGIN_GAME         ReqSimple_SimpleTag = 1
	ReqSimple_PLAYER_INFO        ReqSimple_SimpleTag = 2
	ReqSimple_QUICK_START        ReqSimple_SimpleTag = 3
	ReqSimple_ROOT_LIST          ReqSimple_SimpleTag = 4
	ReqSimple_ENTER_TABLE        ReqSimple_SimpleTag = 5
	ReqSimple_READY              ReqSimple_SimpleTag = 6
	ReqSimple_EXIT_TABLE         ReqSimple_SimpleTag = 7
	ReqSimple_PLAYER_OPT         ReqSimple_SimpleTag = 8
	ReqSimple_EXIT_GAME          ReqSimple_SimpleTag = 9
	ReqSimple_CHANGE_TABLE       ReqSimple_SimpleTag = 10
	ReqSimple_TABLE_CHAT         ReqSimple_SimpleTag = 11
	ReqSimple_WORLD_CHAT         ReqSimple_SimpleTag = 12
	ReqSimple_HEART_BEAT         ReqSimple_SimpleTag = 13
	ReqSimple_GAME_CHARGE        ReqSimple_SimpleTag = 14
	ReqSimple_GAME_BUY           ReqSimple_SimpleTag = 15
	ReqSimple_WATCH_PLAYER_INFO  ReqSimple_SimpleTag = 16
	ReqSimple_GET_RANK_LIST      ReqSimple_SimpleTag = 17
	ReqSimple_SELECT_QUE         ReqSimple_SimpleTag = 18
	ReqSimple_REQ_DISMISS        ReqSimple_SimpleTag = 19
	ReqSimple_RESP_DISMISS       ReqSimple_SimpleTag = 20
	ReqSimple_OFFLINE            ReqSimple_SimpleTag = 21
	ReqSimple_REQ_STOP           ReqSimple_SimpleTag = 22
	ReqSimple_ZHANJI_LIST        ReqSimple_SimpleTag = 23
	ReqSimple_SEND_CARD          ReqSimple_SimpleTag = 24
	ReqSimple_TABLEINFO_REC      ReqSimple_SimpleTag = 25
	ReqSimple_ZHANJI_LIST_DETAIL ReqSimple_SimpleTag = 26
	ReqSimple_FANGKA_LIST        ReqSimple_SimpleTag = 27
)

var ReqSimple_SimpleTag_name = map[int32]string{
	1:  "LOGIN_GAME",
	2:  "PLAYER_INFO",
	3:  "QUICK_START",
	4:  "ROOT_LIST",
	5:  "ENTER_TABLE",
	6:  "READY",
	7:  "EXIT_TABLE",
	8:  "PLAYER_OPT",
	9:  "EXIT_GAME",
	10: "CHANGE_TABLE",
	11: "TABLE_CHAT",
	12: "WORLD_CHAT",
	13: "HEART_BEAT",
	14: "GAME_CHARGE",
	15: "GAME_BUY",
	16: "WATCH_PLAYER_INFO",
	17: "GET_RANK_LIST",
	18: "SELECT_QUE",
	19: "REQ_DISMISS",
	20: "RESP_DISMISS",
	21: "OFFLINE",
	22: "REQ_STOP",
	23: "ZHANJI_LIST",
	24: "SEND_CARD",
	25: "TABLEINFO_REC",
	26: "ZHANJI_LIST_DETAIL",
	27: "FANGKA_LIST",
}
var ReqSimple_SimpleTag_value = map[string]int32{
	"LOGIN_GAME":         1,
	"PLAYER_INFO":        2,
	"QUICK_START":        3,
	"ROOT_LIST":          4,
	"ENTER_TABLE":        5,
	"READY":              6,
	"EXIT_TABLE":         7,
	"PLAYER_OPT":         8,
	"EXIT_GAME":          9,
	"CHANGE_TABLE":       10,
	"TABLE_CHAT":         11,
	"WORLD_CHAT":         12,
	"HEART_BEAT":         13,
	"GAME_CHARGE":        14,
	"GAME_BUY":           15,
	"WATCH_PLAYER_INFO":  16,
	"GET_RANK_LIST":      17,
	"SELECT_QUE":         18,
	"REQ_DISMISS":        19,
	"RESP_DISMISS":       20,
	"OFFLINE":            21,
	"REQ_STOP":           22,
	"ZHANJI_LIST":        23,
	"SEND_CARD":          24,
	"TABLEINFO_REC":      25,
	"ZHANJI_LIST_DETAIL": 26,
	"FANGKA_LIST":        27,
}

func (x ReqSimple_SimpleTag) Enum() *ReqSimple_SimpleTag {
	p := new(ReqSimple_SimpleTag)
	*p = x
	return p
}
func (x ReqSimple_SimpleTag) String() string {
	return proto.EnumName(ReqSimple_SimpleTag_name, int32(x))
}
func (x *ReqSimple_SimpleTag) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ReqSimple_SimpleTag_value, data, "ReqSimple_SimpleTag")
	if err != nil {
		return err
	}
	*x = ReqSimple_SimpleTag(value)
	return nil
}
func (ReqSimple_SimpleTag) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

// 请求命令
type RequestCmd struct {
	Head             *ReqHead         `protobuf:"bytes,1,req,name=head" json:"head,omitempty"`
	Simple           *ReqSimple       `protobuf:"bytes,2,opt,name=simple" json:"simple,omitempty"`
	CrateTable       *ReqCreateTalble `protobuf:"bytes,3,opt,name=crateTable" json:"crateTable,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *RequestCmd) Reset()                    { *m = RequestCmd{} }
func (m *RequestCmd) String() string            { return proto.CompactTextString(m) }
func (*RequestCmd) ProtoMessage()               {}
func (*RequestCmd) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RequestCmd) GetHead() *ReqHead {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *RequestCmd) GetSimple() *ReqSimple {
	if m != nil {
		return m.Simple
	}
	return nil
}

func (m *RequestCmd) GetCrateTable() *ReqCreateTalble {
	if m != nil {
		return m.CrateTable
	}
	return nil
}

// 请求头内容
type ReqHead struct {
	Uid              *int32  `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	MsgID            *int32  `protobuf:"varint,2,req,name=msgID" json:"msgID,omitempty"`
	App              *string `protobuf:"bytes,3,req,name=app" json:"app,omitempty"`
	HallMsg          *string `protobuf:"bytes,4,opt,name=hallMsg" json:"hallMsg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ReqHead) Reset()                    { *m = ReqHead{} }
func (m *ReqHead) String() string            { return proto.CompactTextString(m) }
func (*ReqHead) ProtoMessage()               {}
func (*ReqHead) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ReqHead) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *ReqHead) GetMsgID() int32 {
	if m != nil && m.MsgID != nil {
		return *m.MsgID
	}
	return 0
}

func (m *ReqHead) GetApp() string {
	if m != nil && m.App != nil {
		return *m.App
	}
	return ""
}

func (m *ReqHead) GetHallMsg() string {
	if m != nil && m.HallMsg != nil {
		return *m.HallMsg
	}
	return ""
}

// 简单消息
type ReqSimple struct {
	Tag              *ReqSimple_SimpleTag `protobuf:"varint,1,req,name=tag,enum=protobuf.ReqSimple_SimpleTag" json:"tag,omitempty"`
	IntValue         *int32               `protobuf:"varint,2,opt,name=intValue" json:"intValue,omitempty"`
	StrValue         *string              `protobuf:"bytes,3,opt,name=strValue" json:"strValue,omitempty"`
	ValiNum          *int32               `protobuf:"varint,4,opt,name=valiNum" json:"valiNum,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ReqSimple) Reset()                    { *m = ReqSimple{} }
func (m *ReqSimple) String() string            { return proto.CompactTextString(m) }
func (*ReqSimple) ProtoMessage()               {}
func (*ReqSimple) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReqSimple) GetTag() ReqSimple_SimpleTag {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ReqSimple_LOGIN_GAME
}

func (m *ReqSimple) GetIntValue() int32 {
	if m != nil && m.IntValue != nil {
		return *m.IntValue
	}
	return 0
}

func (m *ReqSimple) GetStrValue() string {
	if m != nil && m.StrValue != nil {
		return *m.StrValue
	}
	return ""
}

func (m *ReqSimple) GetValiNum() int32 {
	if m != nil && m.ValiNum != nil {
		return *m.ValiNum
	}
	return 0
}

// 创建牌桌
type ReqCreateTalble struct {
	TableType        *int32 `protobuf:"varint,1,req,name=tableType" json:"tableType,omitempty"`
	PlayerCt         *int32 `protobuf:"varint,2,req,name=playerCt" json:"playerCt,omitempty"`
	GameCt           *int32 `protobuf:"varint,3,req,name=gameCt" json:"gameCt,omitempty"`
	BaseScore        *int32 `protobuf:"varint,4,opt,name=baseScore" json:"baseScore,omitempty"`
	RobotCt          *int32 `protobuf:"varint,5,opt,name=robotCt" json:"robotCt,omitempty"`
	DianpaoHu        *int32 `protobuf:"varint,6,opt,name=dianpaoHu" json:"dianpaoHu,omitempty"`
	ZimoHu           *int32 `protobuf:"varint,7,opt,name=zimoHu" json:"zimoHu,omitempty"`
	TiandiHu         *int32 `protobuf:"varint,8,opt,name=tiandiHu" json:"tiandiHu,omitempty"`
	KehuQidui        *int32 `protobuf:"varint,9,opt,name=kehuQidui" json:"kehuQidui,omitempty"`
	QiangGang        *int32 `protobuf:"varint,10,opt,name=qiangGang" json:"qiangGang,omitempty"`
	ZhuaNiaoCt       *int32 `protobuf:"varint,11,opt,name=zhuaNiaoCt" json:"zhuaNiaoCt,omitempty"`
	YiMaQuanZh       *int32 `protobuf:"varint,12,opt,name=yiMaQuanZh" json:"yiMaQuanZh,omitempty"`
	MenQing          *int32 `protobuf:"varint,13,opt,name=menQing" json:"menQing,omitempty"`
	Present          *int32 `protobuf:"varint,14,opt,name=present" json:"present,omitempty"`
	TdqZuiCt         *int32 `protobuf:"varint,15,opt,name=tdqZuiCt" json:"tdqZuiCt,omitempty"`
	KePengGang       *int32 `protobuf:"varint,16,opt,name=kePengGang" json:"kePengGang,omitempty"`
	KaiHuSuanGang    *int32 `protobuf:"varint,17,opt,name=kaiHuSuanGang" json:"kaiHuSuanGang,omitempty"`
	YouGangYouFen    *int32 `protobuf:"varint,18,opt,name=youGangYouFen" json:"youGangYouFen,omitempty"`
	DaiHua           *int32 `protobuf:"varint,19,opt,name=daiHua" json:"daiHua,omitempty"`
	FengLing         *int32 `protobuf:"varint,20,opt,name=fengLing" json:"fengLing,omitempty"`
	BaoTing          *int32 `protobuf:"varint,21,opt,name=baoTing" json:"baoTing,omitempty"`
	WuHuaGuo         *int32 `protobuf:"varint,22,opt,name=wuHuaGuo" json:"wuHuaGuo,omitempty"`
	PayWay           *int32 `protobuf:"varint,23,opt,name=PayWay,json=payWay" json:"PayWay,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ReqCreateTalble) Reset()                    { *m = ReqCreateTalble{} }
func (m *ReqCreateTalble) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateTalble) ProtoMessage()               {}
func (*ReqCreateTalble) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReqCreateTalble) GetTableType() int32 {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return 0
}

func (m *ReqCreateTalble) GetPlayerCt() int32 {
	if m != nil && m.PlayerCt != nil {
		return *m.PlayerCt
	}
	return 0
}

func (m *ReqCreateTalble) GetGameCt() int32 {
	if m != nil && m.GameCt != nil {
		return *m.GameCt
	}
	return 0
}

func (m *ReqCreateTalble) GetBaseScore() int32 {
	if m != nil && m.BaseScore != nil {
		return *m.BaseScore
	}
	return 0
}

func (m *ReqCreateTalble) GetRobotCt() int32 {
	if m != nil && m.RobotCt != nil {
		return *m.RobotCt
	}
	return 0
}

func (m *ReqCreateTalble) GetDianpaoHu() int32 {
	if m != nil && m.DianpaoHu != nil {
		return *m.DianpaoHu
	}
	return 0
}

func (m *ReqCreateTalble) GetZimoHu() int32 {
	if m != nil && m.ZimoHu != nil {
		return *m.ZimoHu
	}
	return 0
}

func (m *ReqCreateTalble) GetTiandiHu() int32 {
	if m != nil && m.TiandiHu != nil {
		return *m.TiandiHu
	}
	return 0
}

func (m *ReqCreateTalble) GetKehuQidui() int32 {
	if m != nil && m.KehuQidui != nil {
		return *m.KehuQidui
	}
	return 0
}

func (m *ReqCreateTalble) GetQiangGang() int32 {
	if m != nil && m.QiangGang != nil {
		return *m.QiangGang
	}
	return 0
}

func (m *ReqCreateTalble) GetZhuaNiaoCt() int32 {
	if m != nil && m.ZhuaNiaoCt != nil {
		return *m.ZhuaNiaoCt
	}
	return 0
}

func (m *ReqCreateTalble) GetYiMaQuanZh() int32 {
	if m != nil && m.YiMaQuanZh != nil {
		return *m.YiMaQuanZh
	}
	return 0
}

func (m *ReqCreateTalble) GetMenQing() int32 {
	if m != nil && m.MenQing != nil {
		return *m.MenQing
	}
	return 0
}

func (m *ReqCreateTalble) GetPresent() int32 {
	if m != nil && m.Present != nil {
		return *m.Present
	}
	return 0
}

func (m *ReqCreateTalble) GetTdqZuiCt() int32 {
	if m != nil && m.TdqZuiCt != nil {
		return *m.TdqZuiCt
	}
	return 0
}

func (m *ReqCreateTalble) GetKePengGang() int32 {
	if m != nil && m.KePengGang != nil {
		return *m.KePengGang
	}
	return 0
}

func (m *ReqCreateTalble) GetKaiHuSuanGang() int32 {
	if m != nil && m.KaiHuSuanGang != nil {
		return *m.KaiHuSuanGang
	}
	return 0
}

func (m *ReqCreateTalble) GetYouGangYouFen() int32 {
	if m != nil && m.YouGangYouFen != nil {
		return *m.YouGangYouFen
	}
	return 0
}

func (m *ReqCreateTalble) GetDaiHua() int32 {
	if m != nil && m.DaiHua != nil {
		return *m.DaiHua
	}
	return 0
}

func (m *ReqCreateTalble) GetFengLing() int32 {
	if m != nil && m.FengLing != nil {
		return *m.FengLing
	}
	return 0
}

func (m *ReqCreateTalble) GetBaoTing() int32 {
	if m != nil && m.BaoTing != nil {
		return *m.BaoTing
	}
	return 0
}

func (m *ReqCreateTalble) GetWuHuaGuo() int32 {
	if m != nil && m.WuHuaGuo != nil {
		return *m.WuHuaGuo
	}
	return 0
}

func (m *ReqCreateTalble) GetPayWay() int32 {
	if m != nil && m.PayWay != nil {
		return *m.PayWay
	}
	return 0
}

func init() {
	proto.RegisterType((*RequestCmd)(nil), "protobuf.RequestCmd")
	proto.RegisterType((*ReqHead)(nil), "protobuf.ReqHead")
	proto.RegisterType((*ReqSimple)(nil), "protobuf.ReqSimple")
	proto.RegisterType((*ReqCreateTalble)(nil), "protobuf.ReqCreateTalble")
	proto.RegisterEnum("protobuf.ReqSimple_SimpleTag", ReqSimple_SimpleTag_name, ReqSimple_SimpleTag_value)
}

func init() { proto.RegisterFile("request.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 857 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x52, 0xed, 0x6e, 0xe2, 0x46,
	0x14, 0x55, 0x42, 0x08, 0x30, 0x84, 0x64, 0x98, 0x7c, 0xac, 0x77, 0xfb, 0xa1, 0x15, 0x6a, 0xa5,
	0x95, 0x2a, 0xa5, 0xd2, 0xfe, 0xeb, 0x4f, 0x07, 0x06, 0x70, 0xe3, 0x18, 0x18, 0x4f, 0x9a, 0x26,
	0x52, 0x65, 0x0d, 0xcb, 0x2c, 0x58, 0x01, 0xec, 0x18, 0xbb, 0x15, 0xfb, 0x2a, 0x7d, 0x80, 0xbe,
	0x4c, 0x5f, 0xa1, 0xef, 0xd2, 0xb9, 0x33, 0x83, 0x93, 0x54, 0xfd, 0x81, 0xf0, 0xb9, 0xe7, 0xdc,
	0x7b, 0xee, 0x19, 0x5d, 0xd4, 0xca, 0xe4, 0x53, 0x21, 0x37, 0xf9, 0x65, 0x9a, 0x25, 0x79, 0x42,
	0xea, 0xfa, 0x6f, 0x5a, 0x7c, 0xee, 0xfc, 0xb9, 0x87, 0x10, 0x33, 0x5c, 0x77, 0x35, 0x23, 0xdf,
	0xa3, 0x83, 0x85, 0x14, 0x33, 0x67, 0xef, 0xfd, 0xfe, 0x87, 0xe6, 0xc7, 0xf6, 0xe5, 0x4e, 0x77,
	0xa9, 0x34, 0x43, 0x45, 0x30, 0x4d, 0x93, 0x1f, 0xd0, 0xe1, 0x26, 0x5e, 0xa5, 0x4b, 0xe9, 0xec,
	0xbf, 0xdf, 0x53, 0xc2, 0xd3, 0x57, 0xc2, 0x50, 0x53, 0xcc, 0x4a, 0xc8, 0x4f, 0x08, 0x7d, 0xca,
	0x44, 0x2e, 0xb9, 0x98, 0xaa, 0x86, 0x8a, 0x6e, 0x78, 0xfb, 0xaa, 0xa1, 0x9b, 0x49, 0xcd, 0x2f,
	0x95, 0x80, 0xbd, 0x10, 0x77, 0x7e, 0x43, 0x35, 0x6b, 0x4c, 0x30, 0xaa, 0x14, 0xb1, 0x59, 0xac,
	0xca, 0xe0, 0x93, 0x9c, 0xa1, 0xea, 0x6a, 0x33, 0xf7, 0x7a, 0x6a, 0x07, 0xa8, 0x19, 0x00, 0x3a,
	0x91, 0xa6, 0xca, 0x66, 0xff, 0x43, 0x83, 0xc1, 0x27, 0x71, 0x50, 0x6d, 0x21, 0x96, 0xcb, 0x9b,
	0xcd, 0xdc, 0x39, 0x50, 0xe6, 0x0d, 0xb6, 0x83, 0x9d, 0x7f, 0x0e, 0x50, 0xa3, 0xdc, 0x97, 0xfc,
	0x88, 0x2a, 0xb9, 0x98, 0x6b, 0x87, 0xe3, 0x8f, 0xdf, 0xfc, 0x4f, 0xa2, 0x4b, 0xf3, 0xc7, 0xc5,
	0x9c, 0x81, 0x92, 0xbc, 0x43, 0xf5, 0x78, 0x9d, 0xff, 0x22, 0x96, 0x85, 0x79, 0x87, 0x2a, 0x2b,
	0x31, 0x70, 0x9b, 0x3c, 0x33, 0x5c, 0x45, 0xbb, 0x96, 0x18, 0x16, 0xfa, 0x5d, 0x2c, 0xe3, 0xa0,
	0x58, 0xe9, 0x85, 0xaa, 0x6c, 0x07, 0x3b, 0x7f, 0x57, 0x50, 0xa3, 0x34, 0x21, 0xc7, 0x08, 0xf9,
	0xa3, 0x81, 0x17, 0x44, 0x03, 0xf7, 0x86, 0xe2, 0x3d, 0x72, 0x82, 0x9a, 0x63, 0xdf, 0xbd, 0xa7,
	0x2c, 0xf2, 0x82, 0xfe, 0x08, 0xef, 0x43, 0x61, 0x72, 0xeb, 0x75, 0xaf, 0xa3, 0x90, 0xbb, 0x8c,
	0xe3, 0x0a, 0x69, 0xa9, 0x3c, 0xa3, 0x11, 0x8f, 0x7c, 0x2f, 0xe4, 0xf8, 0x00, 0x78, 0x1a, 0x70,
	0xa5, 0xe7, 0xee, 0x95, 0x4f, 0x71, 0x95, 0x34, 0x50, 0x95, 0x51, 0xb7, 0x77, 0x8f, 0x0f, 0x61,
	0x38, 0xfd, 0xd5, 0xe3, 0x96, 0xaa, 0x01, 0xb6, 0xc3, 0x47, 0x63, 0x8e, 0xeb, 0x30, 0x4a, 0xf3,
	0xda, 0xbb, 0xa1, 0x9e, 0xf5, 0xa8, 0x3b, 0x74, 0x83, 0x01, 0xb5, 0x0d, 0x08, 0x1a, 0xf4, 0x67,
	0xa4, 0xea, 0x1c, 0x37, 0x01, 0xdf, 0x8d, 0x98, 0xdf, 0x33, 0xf8, 0x08, 0xf0, 0x90, 0xaa, 0xb5,
	0xa2, 0x2b, 0xaa, 0x70, 0x0b, 0x96, 0x81, 0x59, 0x40, 0xb3, 0x01, 0xc5, 0xc7, 0xe4, 0x08, 0xd5,
	0x75, 0xe1, 0xea, 0xf6, 0x1e, 0x9f, 0x90, 0x73, 0xd4, 0xbe, 0x73, 0x79, 0x77, 0x18, 0xbd, 0x8c,
	0x88, 0x49, 0x1b, 0xb5, 0x06, 0x94, 0x47, 0xcc, 0x0d, 0xae, 0x4d, 0xaa, 0x36, 0x0c, 0x0e, 0xa9,
	0x4f, 0xbb, 0x3c, 0x9a, 0xdc, 0x52, 0x4c, 0x60, 0x30, 0xa3, 0x93, 0xa8, 0xe7, 0x85, 0x37, 0x5e,
	0x18, 0xe2, 0x53, 0xd8, 0x95, 0xd1, 0x70, 0x5c, 0x56, 0xce, 0x48, 0x13, 0xd5, 0x46, 0xfd, 0xbe,
	0xef, 0x05, 0x14, 0x9f, 0x83, 0x2f, 0xe8, 0x43, 0x3e, 0x1a, 0xe3, 0x0b, 0xe8, 0x7e, 0x50, 0xc1,
	0x7e, 0xf6, 0xcc, 0xf8, 0x37, 0x10, 0x3c, 0xa4, 0x81, 0x8a, 0xe1, 0xb2, 0x1e, 0x76, 0x60, 0x01,
	0x1d, 0x13, 0xf6, 0x89, 0x18, 0xed, 0xe2, 0xb7, 0xe4, 0x02, 0x91, 0x17, 0x2d, 0x51, 0x8f, 0x72,
	0xd7, 0xf3, 0xf1, 0x3b, 0x18, 0xd5, 0x57, 0x4f, 0x74, 0xed, 0x9a, 0x51, 0x5f, 0x75, 0xfe, 0xaa,
	0xa2, 0x93, 0xff, 0x9c, 0x37, 0xf9, 0x1a, 0x35, 0x72, 0xb8, 0x6d, 0xbe, 0x4d, 0xa5, 0xbd, 0xe6,
	0xe7, 0x02, 0x9c, 0x4d, 0xba, 0x14, 0x5b, 0x99, 0x75, 0x73, 0x7b, 0xd6, 0x25, 0x56, 0xb6, 0x87,
	0x73, 0xb1, 0x92, 0x8a, 0xa9, 0x68, 0xc6, 0x22, 0x98, 0x38, 0x15, 0x1b, 0x19, 0x7e, 0x4a, 0x32,
	0x69, 0x0f, 0xea, 0xb9, 0x00, 0xc7, 0x96, 0x25, 0xd3, 0x24, 0x57, 0x6d, 0x55, 0x73, 0x6c, 0x16,
	0x42, 0xdf, 0x2c, 0x16, 0xeb, 0x54, 0x24, 0xc3, 0xc2, 0x39, 0x34, 0x7d, 0x65, 0x01, 0xdc, 0xbe,
	0xc4, 0x2b, 0xa0, 0x6a, 0x9a, 0xb2, 0x08, 0x36, 0xcc, 0x95, 0x68, 0x16, 0x2b, 0xa6, 0x6e, 0x8e,
	0x7e, 0x87, 0x61, 0xe2, 0xa3, 0x5c, 0x14, 0x93, 0x78, 0x56, 0xc4, 0x4e, 0xc3, 0x4c, 0x2c, 0x0b,
	0xc0, 0x3e, 0x29, 0xe5, 0x7c, 0xa0, 0x7e, 0x0e, 0x32, 0x6c, 0x59, 0x20, 0xdf, 0x22, 0xf4, 0x65,
	0x51, 0x88, 0x20, 0x16, 0x89, 0x5a, 0xb5, 0xa9, 0xe9, 0x17, 0x15, 0xe0, 0xb7, 0xf1, 0x8d, 0x98,
	0x14, 0x62, 0xfd, 0xb0, 0x70, 0x8e, 0x0c, 0xff, 0x5c, 0x81, 0x9c, 0x2b, 0xb9, 0x9e, 0xc4, 0x6a,
	0x76, 0xcb, 0xe4, 0xb4, 0x10, 0x98, 0x34, 0x93, 0x1b, 0xb9, 0xce, 0x9d, 0x63, 0xc3, 0x58, 0xa8,
	0xb3, 0xcc, 0x9e, 0x1e, 0x8a, 0x58, 0x39, 0x9e, 0xd8, 0x2c, 0x16, 0x83, 0xdf, 0xa3, 0x1c, 0x4b,
	0xbb, 0x2e, 0x36, 0x7e, 0xcf, 0x15, 0xf2, 0x1d, 0x6a, 0x3d, 0x0a, 0x15, 0x3a, 0x54, 0xf6, 0x5a,
	0xd2, 0xd6, 0x92, 0xd7, 0x45, 0x50, 0x6d, 0x93, 0x02, 0x3e, 0xef, 0x93, 0xa2, 0x2f, 0xd7, 0x0e,
	0x31, 0xaa, 0x57, 0x45, 0x78, 0xeb, 0x19, 0xb4, 0x09, 0xe7, 0xd4, 0xbc, 0xb5, 0x41, 0xb0, 0xdf,
	0x67, 0xe5, 0xe7, 0x43, 0xa8, 0x33, 0xb3, 0xdf, 0x0e, 0x43, 0xaa, 0xa9, 0x48, 0x38, 0x50, 0xe7,
	0x26, 0x95, 0x85, 0xd0, 0xf5, 0x47, 0xa1, 0xda, 0x07, 0x45, 0xe2, 0x5c, 0x98, 0xae, 0x1d, 0x06,
	0xa7, 0xb1, 0xd8, 0xde, 0x89, 0xad, 0xf3, 0xc6, 0x38, 0xa5, 0x1a, 0xfd, 0x1b, 0x00, 0x00, 0xff,
	0xff, 0x7e, 0x24, 0x01, 0x8e, 0x20, 0x06, 0x00, 0x00,
}
