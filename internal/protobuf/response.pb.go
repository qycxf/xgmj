// Code generated by protoc-gen-go.
// source: response.proto
// DO NOT EDIT!

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RespSimple_SimpleTag int32

const (
	RespSimple_ENTER_TABLE    RespSimple_SimpleTag = 1
	RespSimple_TOP_TIP        RespSimple_SimpleTag = 2
	RespSimple_KICK_OUT       RespSimple_SimpleTag = 3
	RespSimple_DISMISS_TABLE  RespSimple_SimpleTag = 4
	RespSimple_DISMISS_RESULT RespSimple_SimpleTag = 5
	RespSimple_WIN_TIP_S      RespSimple_SimpleTag = 6
	RespSimple_WIN_TIP_M      RespSimple_SimpleTag = 7
	RespSimple_PRESENT_SUCC   RespSimple_SimpleTag = 8
)

var RespSimple_SimpleTag_name = map[int32]string{
	1: "ENTER_TABLE",
	2: "TOP_TIP",
	3: "KICK_OUT",
	4: "DISMISS_TABLE",
	5: "DISMISS_RESULT",
	6: "WIN_TIP_S",
	7: "WIN_TIP_M",
	8: "PRESENT_SUCC",
}
var RespSimple_SimpleTag_value = map[string]int32{
	"ENTER_TABLE":    1,
	"TOP_TIP":        2,
	"KICK_OUT":       3,
	"DISMISS_TABLE":  4,
	"DISMISS_RESULT": 5,
	"WIN_TIP_S":      6,
	"WIN_TIP_M":      7,
	"PRESENT_SUCC":   8,
}

func (x RespSimple_SimpleTag) Enum() *RespSimple_SimpleTag {
	p := new(RespSimple_SimpleTag)
	*p = x
	return p
}
func (x RespSimple_SimpleTag) String() string {
	return proto.EnumName(RespSimple_SimpleTag_name, int32(x))
}
func (x *RespSimple_SimpleTag) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RespSimple_SimpleTag_value, data, "RespSimple_SimpleTag")
	if err != nil {
		return err
	}
	*x = RespSimple_SimpleTag(value)
	return nil
}
func (RespSimple_SimpleTag) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 0} }

// 响应命令
type ResponseCmd struct {
	Head             *RespHead     `protobuf:"bytes,1,req,name=head" json:"head,omitempty"`
	Simple           *RespSimple   `protobuf:"bytes,2,opt,name=simple" json:"simple,omitempty"`
	PlayerInfo       *PlayerInfo   `protobuf:"bytes,3,opt,name=playerInfo" json:"playerInfo,omitempty"`
	TableInfo        *TableInfo    `protobuf:"bytes,4,opt,name=tableInfo" json:"tableInfo,omitempty"`
	ChatInfo         *ChatInfo     `protobuf:"bytes,5,opt,name=chatInfo" json:"chatInfo,omitempty"`
	WordChat         *WordChat     `protobuf:"bytes,6,opt,name=wordChat" json:"wordChat,omitempty"`
	GameRecord       []*GameRecord `protobuf:"bytes,7,rep,name=gameRecord" json:"gameRecord,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ResponseCmd) Reset()                    { *m = ResponseCmd{} }
func (m *ResponseCmd) String() string            { return proto.CompactTextString(m) }
func (*ResponseCmd) ProtoMessage()               {}
func (*ResponseCmd) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ResponseCmd) GetHead() *RespHead {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *ResponseCmd) GetSimple() *RespSimple {
	if m != nil {
		return m.Simple
	}
	return nil
}

func (m *ResponseCmd) GetPlayerInfo() *PlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *ResponseCmd) GetTableInfo() *TableInfo {
	if m != nil {
		return m.TableInfo
	}
	return nil
}

func (m *ResponseCmd) GetChatInfo() *ChatInfo {
	if m != nil {
		return m.ChatInfo
	}
	return nil
}

func (m *ResponseCmd) GetWordChat() *WordChat {
	if m != nil {
		return m.WordChat
	}
	return nil
}

func (m *ResponseCmd) GetGameRecord() []*GameRecord {
	if m != nil {
		return m.GameRecord
	}
	return nil
}

// 响应头定义
type RespHead struct {
	Uid              *int32  `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	MsgID            *int32  `protobuf:"varint,2,req,name=msgID" json:"msgID,omitempty"`
	App              *string `protobuf:"bytes,3,req,name=app" json:"app,omitempty"`
	HallMsg          *string `protobuf:"bytes,4,opt,name=hallMsg" json:"hallMsg,omitempty"`
	RespIDs          *int32  `protobuf:"varint,5,req,name=respIDs" json:"respIDs,omitempty"`
	Result           *int32  `protobuf:"varint,6,req,name=result" json:"result,omitempty"`
	Tip              *string `protobuf:"bytes,7,opt,name=tip" json:"tip,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RespHead) Reset()                    { *m = RespHead{} }
func (m *RespHead) String() string            { return proto.CompactTextString(m) }
func (*RespHead) ProtoMessage()               {}
func (*RespHead) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *RespHead) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *RespHead) GetMsgID() int32 {
	if m != nil && m.MsgID != nil {
		return *m.MsgID
	}
	return 0
}

func (m *RespHead) GetApp() string {
	if m != nil && m.App != nil {
		return *m.App
	}
	return ""
}

func (m *RespHead) GetHallMsg() string {
	if m != nil && m.HallMsg != nil {
		return *m.HallMsg
	}
	return ""
}

func (m *RespHead) GetRespIDs() int32 {
	if m != nil && m.RespIDs != nil {
		return *m.RespIDs
	}
	return 0
}

func (m *RespHead) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *RespHead) GetTip() string {
	if m != nil && m.Tip != nil {
		return *m.Tip
	}
	return ""
}

// 简单消息，不带数据的操作
type RespSimple struct {
	Tag              *RespSimple_SimpleTag `protobuf:"varint,1,req,name=tag,enum=protobuf.RespSimple_SimpleTag" json:"tag,omitempty"`
	IntValue         *int32                `protobuf:"varint,2,opt,name=intValue" json:"intValue,omitempty"`
	StrValue         *string               `protobuf:"bytes,3,opt,name=strValue" json:"strValue,omitempty"`
	IntArr           []int32               `protobuf:"varint,4,rep,name=intArr" json:"intArr,omitempty"`
	StrArr           []string              `protobuf:"bytes,5,rep,name=strArr" json:"strArr,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *RespSimple) Reset()                    { *m = RespSimple{} }
func (m *RespSimple) String() string            { return proto.CompactTextString(m) }
func (*RespSimple) ProtoMessage()               {}
func (*RespSimple) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *RespSimple) GetTag() RespSimple_SimpleTag {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return RespSimple_ENTER_TABLE
}

func (m *RespSimple) GetIntValue() int32 {
	if m != nil && m.IntValue != nil {
		return *m.IntValue
	}
	return 0
}

func (m *RespSimple) GetStrValue() string {
	if m != nil && m.StrValue != nil {
		return *m.StrValue
	}
	return ""
}

func (m *RespSimple) GetIntArr() []int32 {
	if m != nil {
		return m.IntArr
	}
	return nil
}

func (m *RespSimple) GetStrArr() []string {
	if m != nil {
		return m.StrArr
	}
	return nil
}

// 房间信息
type RoomInfo struct {
	RoomId           *int32   `protobuf:"varint,1,req,name=roomId" json:"roomId,omitempty"`
	RoomName         *string  `protobuf:"bytes,2,req,name=roomName" json:"roomName,omitempty"`
	BaseMoney        *string  `protobuf:"bytes,3,req,name=baseMoney" json:"baseMoney,omitempty"`
	MinMoney         *string  `protobuf:"bytes,4,req,name=minMoney" json:"minMoney,omitempty"`
	PlayerNum        *int32   `protobuf:"varint,5,req,name=playerNum" json:"playerNum,omitempty"`
	RaiseChip        []string `protobuf:"bytes,6,rep,name=raiseChip" json:"raiseChip,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *RoomInfo) Reset()                    { *m = RoomInfo{} }
func (m *RoomInfo) String() string            { return proto.CompactTextString(m) }
func (*RoomInfo) ProtoMessage()               {}
func (*RoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *RoomInfo) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *RoomInfo) GetRoomName() string {
	if m != nil && m.RoomName != nil {
		return *m.RoomName
	}
	return ""
}

func (m *RoomInfo) GetBaseMoney() string {
	if m != nil && m.BaseMoney != nil {
		return *m.BaseMoney
	}
	return ""
}

func (m *RoomInfo) GetMinMoney() string {
	if m != nil && m.MinMoney != nil {
		return *m.MinMoney
	}
	return ""
}

func (m *RoomInfo) GetPlayerNum() int32 {
	if m != nil && m.PlayerNum != nil {
		return *m.PlayerNum
	}
	return 0
}

func (m *RoomInfo) GetRaiseChip() []string {
	if m != nil {
		return m.RaiseChip
	}
	return nil
}

// 玩家信息
type PlayerInfo struct {
	Uid              *int32  `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	NickName         *string `protobuf:"bytes,2,req,name=nickName" json:"nickName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlayerInfo) Reset()                    { *m = PlayerInfo{} }
func (m *PlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerInfo) ProtoMessage()               {}
func (*PlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *PlayerInfo) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *PlayerInfo) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

// 座位信息
type SeatInfo struct {
	PlayerInfo       *PlayerInfo `protobuf:"bytes,1,opt,name=playerInfo" json:"playerInfo,omitempty"`
	SeatId           *int32      `protobuf:"varint,2,req,name=seatId" json:"seatId,omitempty"`
	State            *int32      `protobuf:"varint,3,req,name=state" json:"state,omitempty"`
	Uuid             *string     `protobuf:"bytes,4,opt,name=uuid" json:"uuid,omitempty"`
	HandCards        []int32     `protobuf:"varint,5,rep,name=handCards" json:"handCards,omitempty"`
	OutCards         []int32     `protobuf:"varint,6,rep,name=outCards" json:"outCards,omitempty"`
	PgInfos          []*PGInfo   `protobuf:"bytes,7,rep,name=pgInfos" json:"pgInfos,omitempty"`
	SeatOpts         *SeatOpts   `protobuf:"bytes,8,opt,name=seatOpts" json:"seatOpts,omitempty"`
	ThreeCards       []int32     `protobuf:"varint,9,rep,name=threeCards" json:"threeCards,omitempty"`
	QueSystem        []int32     `protobuf:"varint,10,rep,name=queSystem" json:"queSystem,omitempty"`
	QueSelect        *int32      `protobuf:"varint,11,opt,name=queSelect" json:"queSelect,omitempty"`
	Score            []int32     `protobuf:"varint,12,rep,name=score" json:"score,omitempty"`
	SelectCards      []int32     `protobuf:"varint,13,rep,name=selectCards" json:"selectCards,omitempty"`
	HuType           *int32      `protobuf:"varint,14,opt,name=huType" json:"huType,omitempty"`
	Offline          *int32      `protobuf:"varint,15,opt,name=offline" json:"offline,omitempty"`
	Huseq            *int32      `protobuf:"varint,16,opt,name=huseq" json:"huseq,omitempty"`
	TingCards        []int32     `protobuf:"varint,17,rep,name=tingCards" json:"tingCards,omitempty"`
	BuHuaCt          *int32      `protobuf:"varint,18,opt,name=buHuaCt" json:"buHuaCt,omitempty"`
	HuaCards         []int32     `protobuf:"varint,19,rep,name=huaCards" json:"huaCards,omitempty"`
	TingPai          *bool       `protobuf:"varint,20,opt,name=tingPai" json:"tingPai,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SeatInfo) Reset()                    { *m = SeatInfo{} }
func (m *SeatInfo) String() string            { return proto.CompactTextString(m) }
func (*SeatInfo) ProtoMessage()               {}
func (*SeatInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *SeatInfo) GetPlayerInfo() *PlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *SeatInfo) GetSeatId() int32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *SeatInfo) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *SeatInfo) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *SeatInfo) GetHandCards() []int32 {
	if m != nil {
		return m.HandCards
	}
	return nil
}

func (m *SeatInfo) GetOutCards() []int32 {
	if m != nil {
		return m.OutCards
	}
	return nil
}

func (m *SeatInfo) GetPgInfos() []*PGInfo {
	if m != nil {
		return m.PgInfos
	}
	return nil
}

func (m *SeatInfo) GetSeatOpts() *SeatOpts {
	if m != nil {
		return m.SeatOpts
	}
	return nil
}

func (m *SeatInfo) GetThreeCards() []int32 {
	if m != nil {
		return m.ThreeCards
	}
	return nil
}

func (m *SeatInfo) GetQueSystem() []int32 {
	if m != nil {
		return m.QueSystem
	}
	return nil
}

func (m *SeatInfo) GetQueSelect() int32 {
	if m != nil && m.QueSelect != nil {
		return *m.QueSelect
	}
	return 0
}

func (m *SeatInfo) GetScore() []int32 {
	if m != nil {
		return m.Score
	}
	return nil
}

func (m *SeatInfo) GetSelectCards() []int32 {
	if m != nil {
		return m.SelectCards
	}
	return nil
}

func (m *SeatInfo) GetHuType() int32 {
	if m != nil && m.HuType != nil {
		return *m.HuType
	}
	return 0
}

func (m *SeatInfo) GetOffline() int32 {
	if m != nil && m.Offline != nil {
		return *m.Offline
	}
	return 0
}

func (m *SeatInfo) GetHuseq() int32 {
	if m != nil && m.Huseq != nil {
		return *m.Huseq
	}
	return 0
}

func (m *SeatInfo) GetTingCards() []int32 {
	if m != nil {
		return m.TingCards
	}
	return nil
}

func (m *SeatInfo) GetBuHuaCt() int32 {
	if m != nil && m.BuHuaCt != nil {
		return *m.BuHuaCt
	}
	return 0
}

func (m *SeatInfo) GetHuaCards() []int32 {
	if m != nil {
		return m.HuaCards
	}
	return nil
}

func (m *SeatInfo) GetTingPai() bool {
	if m != nil && m.TingPai != nil {
		return *m.TingPai
	}
	return false
}

// 座位可操作信息
type SeatOpts struct {
	Peng             *bool   `protobuf:"varint,1,opt,name=peng" json:"peng,omitempty"`
	Gang             *bool   `protobuf:"varint,2,opt,name=gang" json:"gang,omitempty"`
	Hu               *bool   `protobuf:"varint,3,opt,name=hu" json:"hu,omitempty"`
	Chi              *bool   `protobuf:"varint,4,opt,name=chi" json:"chi,omitempty"`
	Bu               *bool   `protobuf:"varint,5,opt,name=bu" json:"bu,omitempty"`
	Cancer           *bool   `protobuf:"varint,6,opt,name=cancer" json:"cancer,omitempty"`
	PengCard         []int32 `protobuf:"varint,7,rep,name=pengCard" json:"pengCard,omitempty"`
	GangCard         []int32 `protobuf:"varint,8,rep,name=gangCard" json:"gangCard,omitempty"`
	HuCard           *int32  `protobuf:"varint,9,opt,name=huCard" json:"huCard,omitempty"`
	ChiCard          []int32 `protobuf:"varint,10,rep,name=chiCard" json:"chiCard,omitempty"`
	BuCard           []int32 `protobuf:"varint,11,rep,name=buCard" json:"buCard,omitempty"`
	Ting             *bool   `protobuf:"varint,12,opt,name=ting" json:"ting,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SeatOpts) Reset()                    { *m = SeatOpts{} }
func (m *SeatOpts) String() string            { return proto.CompactTextString(m) }
func (*SeatOpts) ProtoMessage()               {}
func (*SeatOpts) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *SeatOpts) GetPeng() bool {
	if m != nil && m.Peng != nil {
		return *m.Peng
	}
	return false
}

func (m *SeatOpts) GetGang() bool {
	if m != nil && m.Gang != nil {
		return *m.Gang
	}
	return false
}

func (m *SeatOpts) GetHu() bool {
	if m != nil && m.Hu != nil {
		return *m.Hu
	}
	return false
}

func (m *SeatOpts) GetChi() bool {
	if m != nil && m.Chi != nil {
		return *m.Chi
	}
	return false
}

func (m *SeatOpts) GetBu() bool {
	if m != nil && m.Bu != nil {
		return *m.Bu
	}
	return false
}

func (m *SeatOpts) GetCancer() bool {
	if m != nil && m.Cancer != nil {
		return *m.Cancer
	}
	return false
}

func (m *SeatOpts) GetPengCard() []int32 {
	if m != nil {
		return m.PengCard
	}
	return nil
}

func (m *SeatOpts) GetGangCard() []int32 {
	if m != nil {
		return m.GangCard
	}
	return nil
}

func (m *SeatOpts) GetHuCard() int32 {
	if m != nil && m.HuCard != nil {
		return *m.HuCard
	}
	return 0
}

func (m *SeatOpts) GetChiCard() []int32 {
	if m != nil {
		return m.ChiCard
	}
	return nil
}

func (m *SeatOpts) GetBuCard() []int32 {
	if m != nil {
		return m.BuCard
	}
	return nil
}

func (m *SeatOpts) GetTing() bool {
	if m != nil && m.Ting != nil {
		return *m.Ting
	}
	return false
}

// 碰杠吃牌信息
type PGInfo struct {
	Type             *int32  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Cards            []int32 `protobuf:"varint,2,rep,name=cards" json:"cards,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PGInfo) Reset()                    { *m = PGInfo{} }
func (m *PGInfo) String() string            { return proto.CompactTextString(m) }
func (*PGInfo) ProtoMessage()               {}
func (*PGInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *PGInfo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *PGInfo) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

// 座位出牌提示信息
type SendTip struct {
	SendCard         *int32  `protobuf:"varint,1,req,name=sendCard" json:"sendCard,omitempty"`
	HuCards          []int32 `protobuf:"varint,2,rep,name=huCards" json:"huCards,omitempty"`
	HuScores         []int32 `protobuf:"varint,3,rep,name=huScores" json:"huScores,omitempty"`
	RemainCt         []int32 `protobuf:"varint,4,rep,name=remainCt" json:"remainCt,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SendTip) Reset()                    { *m = SendTip{} }
func (m *SendTip) String() string            { return proto.CompactTextString(m) }
func (*SendTip) ProtoMessage()               {}
func (*SendTip) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *SendTip) GetSendCard() int32 {
	if m != nil && m.SendCard != nil {
		return *m.SendCard
	}
	return 0
}

func (m *SendTip) GetHuCards() []int32 {
	if m != nil {
		return m.HuCards
	}
	return nil
}

func (m *SendTip) GetHuScores() []int32 {
	if m != nil {
		return m.HuScores
	}
	return nil
}

func (m *SendTip) GetRemainCt() []int32 {
	if m != nil {
		return m.RemainCt
	}
	return nil
}

// 桌子信息
type TableInfo struct {
	RoomID           *int32         `protobuf:"varint,1,opt,name=roomID" json:"roomID,omitempty"`
	TableID          *int32         `protobuf:"varint,2,req,name=tableID" json:"tableID,omitempty"`
	TableName        *string        `protobuf:"bytes,3,opt,name=tableName" json:"tableName,omitempty"`
	ReaminTime       *int32         `protobuf:"varint,4,req,name=reaminTime" json:"reaminTime,omitempty"`
	State            *int32         `protobuf:"varint,5,req,name=state" json:"state,omitempty"`
	Uuid             *string        `protobuf:"bytes,6,opt,name=uuid" json:"uuid,omitempty"`
	SeatInfo         []*SeatInfo    `protobuf:"bytes,7,rep,name=seatInfo" json:"seatInfo,omitempty"`
	CurtSpeaker      *int32         `protobuf:"varint,8,opt,name=curtSpeaker" json:"curtSpeaker,omitempty"`
	ExecOpt          *ExecOpt       `protobuf:"bytes,9,opt,name=execOpt" json:"execOpt,omitempty"`
	DSeatID          *int32         `protobuf:"varint,10,opt,name=dSeatID" json:"dSeatID,omitempty"`
	RemainCt         *int32         `protobuf:"varint,11,opt,name=remainCt" json:"remainCt,omitempty"`
	Flow             *int32         `protobuf:"varint,12,opt,name=flow" json:"flow,omitempty"`
	ResultList       []*SeatResult  `protobuf:"bytes,13,rep,name=resultList" json:"resultList,omitempty"`
	GameResult       []*SeatResult  `protobuf:"bytes,14,rep,name=gameResult" json:"gameResult,omitempty"`
	GameCt           *int32         `protobuf:"varint,15,opt,name=gameCt" json:"gameCt,omitempty"`
	FangSeatID       *int32         `protobuf:"varint,16,opt,name=fangSeatID" json:"fangSeatID,omitempty"`
	LastSendCard     *int32         `protobuf:"varint,17,opt,name=lastSendCard" json:"lastSendCard,omitempty"`
	TotalResult      []*GameResult  `protobuf:"bytes,18,rep,name=totalResult" json:"totalResult,omitempty"`
	ScoreChange      []*ScoreChange `protobuf:"bytes,19,rep,name=scoreChange" json:"scoreChange,omitempty"`
	TableCfg         *TableCfg      `protobuf:"bytes,20,opt,name=tableCfg" json:"tableCfg,omitempty"`
	ZhuaNiaoInfo     *ZhuaNiaoInfo  `protobuf:"bytes,21,opt,name=zhuaNiaoInfo" json:"zhuaNiaoInfo,omitempty"`
	TableTime        *int32         `protobuf:"varint,22,opt,name=tableTime" json:"tableTime,omitempty"`
	LianZhuangCt     *int32         `protobuf:"varint,23,opt,name=lianZhuangCt" json:"lianZhuangCt,omitempty"`
	SendTipArr       []*SendTip     `protobuf:"bytes,24,rep,name=sendTipArr" json:"sendTipArr,omitempty"`
	PresenterId      *int32         `protobuf:"varint,25,opt,name=presenterId" json:"presenterId,omitempty"`
	PresenterName    *string        `protobuf:"bytes,26,opt,name=presenterName" json:"presenterName,omitempty"`
	ValiNum          *int32         `protobuf:"varint,27,opt,name=valiNum" json:"valiNum,omitempty"`
	LastCardData     *int32         `protobuf:"varint,28,opt,name=lastCardData" json:"lastCardData,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *TableInfo) Reset()                    { *m = TableInfo{} }
func (m *TableInfo) String() string            { return proto.CompactTextString(m) }
func (*TableInfo) ProtoMessage()               {}
func (*TableInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *TableInfo) GetRoomID() int32 {
	if m != nil && m.RoomID != nil {
		return *m.RoomID
	}
	return 0
}

func (m *TableInfo) GetTableID() int32 {
	if m != nil && m.TableID != nil {
		return *m.TableID
	}
	return 0
}

func (m *TableInfo) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *TableInfo) GetReaminTime() int32 {
	if m != nil && m.ReaminTime != nil {
		return *m.ReaminTime
	}
	return 0
}

func (m *TableInfo) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *TableInfo) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *TableInfo) GetSeatInfo() []*SeatInfo {
	if m != nil {
		return m.SeatInfo
	}
	return nil
}

func (m *TableInfo) GetCurtSpeaker() int32 {
	if m != nil && m.CurtSpeaker != nil {
		return *m.CurtSpeaker
	}
	return 0
}

func (m *TableInfo) GetExecOpt() *ExecOpt {
	if m != nil {
		return m.ExecOpt
	}
	return nil
}

func (m *TableInfo) GetDSeatID() int32 {
	if m != nil && m.DSeatID != nil {
		return *m.DSeatID
	}
	return 0
}

func (m *TableInfo) GetRemainCt() int32 {
	if m != nil && m.RemainCt != nil {
		return *m.RemainCt
	}
	return 0
}

func (m *TableInfo) GetFlow() int32 {
	if m != nil && m.Flow != nil {
		return *m.Flow
	}
	return 0
}

func (m *TableInfo) GetResultList() []*SeatResult {
	if m != nil {
		return m.ResultList
	}
	return nil
}

func (m *TableInfo) GetGameResult() []*SeatResult {
	if m != nil {
		return m.GameResult
	}
	return nil
}

func (m *TableInfo) GetGameCt() int32 {
	if m != nil && m.GameCt != nil {
		return *m.GameCt
	}
	return 0
}

func (m *TableInfo) GetFangSeatID() int32 {
	if m != nil && m.FangSeatID != nil {
		return *m.FangSeatID
	}
	return 0
}

func (m *TableInfo) GetLastSendCard() int32 {
	if m != nil && m.LastSendCard != nil {
		return *m.LastSendCard
	}
	return 0
}

func (m *TableInfo) GetTotalResult() []*GameResult {
	if m != nil {
		return m.TotalResult
	}
	return nil
}

func (m *TableInfo) GetScoreChange() []*ScoreChange {
	if m != nil {
		return m.ScoreChange
	}
	return nil
}

func (m *TableInfo) GetTableCfg() *TableCfg {
	if m != nil {
		return m.TableCfg
	}
	return nil
}

func (m *TableInfo) GetZhuaNiaoInfo() *ZhuaNiaoInfo {
	if m != nil {
		return m.ZhuaNiaoInfo
	}
	return nil
}

func (m *TableInfo) GetTableTime() int32 {
	if m != nil && m.TableTime != nil {
		return *m.TableTime
	}
	return 0
}

func (m *TableInfo) GetLianZhuangCt() int32 {
	if m != nil && m.LianZhuangCt != nil {
		return *m.LianZhuangCt
	}
	return 0
}

func (m *TableInfo) GetSendTipArr() []*SendTip {
	if m != nil {
		return m.SendTipArr
	}
	return nil
}

func (m *TableInfo) GetPresenterId() int32 {
	if m != nil && m.PresenterId != nil {
		return *m.PresenterId
	}
	return 0
}

func (m *TableInfo) GetPresenterName() string {
	if m != nil && m.PresenterName != nil {
		return *m.PresenterName
	}
	return ""
}

func (m *TableInfo) GetValiNum() int32 {
	if m != nil && m.ValiNum != nil {
		return *m.ValiNum
	}
	return 0
}

func (m *TableInfo) GetLastCardData() int32 {
	if m != nil && m.LastCardData != nil {
		return *m.LastCardData
	}
	return 0
}

// 抓鸟信息
type ZhuaNiaoInfo struct {
	NiaoCardArr      []int32 `protobuf:"varint,1,rep,name=niaoCardArr" json:"niaoCardArr,omitempty"`
	ZhongNiaoArr     []int32 `protobuf:"varint,2,rep,name=zhongNiaoArr" json:"zhongNiaoArr,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ZhuaNiaoInfo) Reset()                    { *m = ZhuaNiaoInfo{} }
func (m *ZhuaNiaoInfo) String() string            { return proto.CompactTextString(m) }
func (*ZhuaNiaoInfo) ProtoMessage()               {}
func (*ZhuaNiaoInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *ZhuaNiaoInfo) GetNiaoCardArr() []int32 {
	if m != nil {
		return m.NiaoCardArr
	}
	return nil
}

func (m *ZhuaNiaoInfo) GetZhongNiaoArr() []int32 {
	if m != nil {
		return m.ZhongNiaoArr
	}
	return nil
}

// 执行座位操作信息
type ExecOpt struct {
	OptSeatId        *int32  `protobuf:"varint,1,opt,name=optSeatId" json:"optSeatId,omitempty"`
	OptType          *int32  `protobuf:"varint,2,opt,name=optType" json:"optType,omitempty"`
	OptData          *int32  `protobuf:"varint,3,opt,name=optData" json:"optData,omitempty"`
	OptDetail        *int32  `protobuf:"varint,4,opt,name=optDetail" json:"optDetail,omitempty"`
	DianPaoSeatId    *int32  `protobuf:"varint,5,opt,name=dianPaoSeatId" json:"dianPaoSeatId,omitempty"`
	HupxIdArr        []int32 `protobuf:"varint,6,rep,name=hupxIdArr" json:"hupxIdArr,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ExecOpt) Reset()                    { *m = ExecOpt{} }
func (m *ExecOpt) String() string            { return proto.CompactTextString(m) }
func (*ExecOpt) ProtoMessage()               {}
func (*ExecOpt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *ExecOpt) GetOptSeatId() int32 {
	if m != nil && m.OptSeatId != nil {
		return *m.OptSeatId
	}
	return 0
}

func (m *ExecOpt) GetOptType() int32 {
	if m != nil && m.OptType != nil {
		return *m.OptType
	}
	return 0
}

func (m *ExecOpt) GetOptData() int32 {
	if m != nil && m.OptData != nil {
		return *m.OptData
	}
	return 0
}

func (m *ExecOpt) GetOptDetail() int32 {
	if m != nil && m.OptDetail != nil {
		return *m.OptDetail
	}
	return 0
}

func (m *ExecOpt) GetDianPaoSeatId() int32 {
	if m != nil && m.DianPaoSeatId != nil {
		return *m.DianPaoSeatId
	}
	return 0
}

func (m *ExecOpt) GetHupxIdArr() []int32 {
	if m != nil {
		return m.HupxIdArr
	}
	return nil
}

// 桌子配置信息
type TableCfg struct {
	TableType        *int32 `protobuf:"varint,1,req,name=tableType" json:"tableType,omitempty"`
	PlayerCt         *int32 `protobuf:"varint,2,req,name=playerCt" json:"playerCt,omitempty"`
	GameCt           *int32 `protobuf:"varint,3,req,name=gameCt" json:"gameCt,omitempty"`
	BaseScore        *int32 `protobuf:"varint,4,opt,name=baseScore" json:"baseScore,omitempty"`
	RobotCt          *int32 `protobuf:"varint,5,opt,name=robotCt" json:"robotCt,omitempty"`
	DianpaoHu        *int32 `protobuf:"varint,6,opt,name=dianpaoHu" json:"dianpaoHu,omitempty"`
	ZimoHu           *int32 `protobuf:"varint,7,opt,name=zimoHu" json:"zimoHu,omitempty"`
	TiandiHu         *int32 `protobuf:"varint,8,opt,name=tiandiHu" json:"tiandiHu,omitempty"`
	KehuQidui        *int32 `protobuf:"varint,9,opt,name=kehuQidui" json:"kehuQidui,omitempty"`
	QiangGang        *int32 `protobuf:"varint,10,opt,name=qiangGang" json:"qiangGang,omitempty"`
	ZhuaNiaoCt       *int32 `protobuf:"varint,11,opt,name=zhuaNiaoCt" json:"zhuaNiaoCt,omitempty"`
	YiMaQuanZh       *int32 `protobuf:"varint,12,opt,name=yiMaQuanZh" json:"yiMaQuanZh,omitempty"`
	MenQing          *int32 `protobuf:"varint,13,opt,name=menQing" json:"menQing,omitempty"`
	Present          *int32 `protobuf:"varint,14,opt,name=present" json:"present,omitempty"`
	TdqZuiCt         *int32 `protobuf:"varint,15,opt,name=tdqZuiCt" json:"tdqZuiCt,omitempty"`
	KePengGang       *int32 `protobuf:"varint,16,opt,name=kePengGang" json:"kePengGang,omitempty"`
	KaiHuSuanGang    *int32 `protobuf:"varint,17,opt,name=kaiHuSuanGang" json:"kaiHuSuanGang,omitempty"`
	YouGangYouFen    *int32 `protobuf:"varint,18,opt,name=youGangYouFen" json:"youGangYouFen,omitempty"`
	CreaterId        *int32 `protobuf:"varint,19,opt,name=createrId" json:"createrId,omitempty"`
	DaiHua           *int32 `protobuf:"varint,20,opt,name=daiHua" json:"daiHua,omitempty"`
	FengLing         *int32 `protobuf:"varint,21,opt,name=fengLing" json:"fengLing,omitempty"`
	BaoTing          *int32 `protobuf:"varint,22,opt,name=baoTing" json:"baoTing,omitempty"`
	WuHuaGuo         *int32 `protobuf:"varint,23,opt,name=wuHuaGuo" json:"wuHuaGuo,omitempty"`
	PayWay           *int32 `protobuf:"varint,24,opt,name=PayWay,json=payWay" json:"PayWay,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TableCfg) Reset()                    { *m = TableCfg{} }
func (m *TableCfg) String() string            { return proto.CompactTextString(m) }
func (*TableCfg) ProtoMessage()               {}
func (*TableCfg) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *TableCfg) GetTableType() int32 {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return 0
}

func (m *TableCfg) GetPlayerCt() int32 {
	if m != nil && m.PlayerCt != nil {
		return *m.PlayerCt
	}
	return 0
}

func (m *TableCfg) GetGameCt() int32 {
	if m != nil && m.GameCt != nil {
		return *m.GameCt
	}
	return 0
}

func (m *TableCfg) GetBaseScore() int32 {
	if m != nil && m.BaseScore != nil {
		return *m.BaseScore
	}
	return 0
}

func (m *TableCfg) GetRobotCt() int32 {
	if m != nil && m.RobotCt != nil {
		return *m.RobotCt
	}
	return 0
}

func (m *TableCfg) GetDianpaoHu() int32 {
	if m != nil && m.DianpaoHu != nil {
		return *m.DianpaoHu
	}
	return 0
}

func (m *TableCfg) GetZimoHu() int32 {
	if m != nil && m.ZimoHu != nil {
		return *m.ZimoHu
	}
	return 0
}

func (m *TableCfg) GetTiandiHu() int32 {
	if m != nil && m.TiandiHu != nil {
		return *m.TiandiHu
	}
	return 0
}

func (m *TableCfg) GetKehuQidui() int32 {
	if m != nil && m.KehuQidui != nil {
		return *m.KehuQidui
	}
	return 0
}

func (m *TableCfg) GetQiangGang() int32 {
	if m != nil && m.QiangGang != nil {
		return *m.QiangGang
	}
	return 0
}

func (m *TableCfg) GetZhuaNiaoCt() int32 {
	if m != nil && m.ZhuaNiaoCt != nil {
		return *m.ZhuaNiaoCt
	}
	return 0
}

func (m *TableCfg) GetYiMaQuanZh() int32 {
	if m != nil && m.YiMaQuanZh != nil {
		return *m.YiMaQuanZh
	}
	return 0
}

func (m *TableCfg) GetMenQing() int32 {
	if m != nil && m.MenQing != nil {
		return *m.MenQing
	}
	return 0
}

func (m *TableCfg) GetPresent() int32 {
	if m != nil && m.Present != nil {
		return *m.Present
	}
	return 0
}

func (m *TableCfg) GetTdqZuiCt() int32 {
	if m != nil && m.TdqZuiCt != nil {
		return *m.TdqZuiCt
	}
	return 0
}

func (m *TableCfg) GetKePengGang() int32 {
	if m != nil && m.KePengGang != nil {
		return *m.KePengGang
	}
	return 0
}

func (m *TableCfg) GetKaiHuSuanGang() int32 {
	if m != nil && m.KaiHuSuanGang != nil {
		return *m.KaiHuSuanGang
	}
	return 0
}

func (m *TableCfg) GetYouGangYouFen() int32 {
	if m != nil && m.YouGangYouFen != nil {
		return *m.YouGangYouFen
	}
	return 0
}

func (m *TableCfg) GetCreaterId() int32 {
	if m != nil && m.CreaterId != nil {
		return *m.CreaterId
	}
	return 0
}

func (m *TableCfg) GetDaiHua() int32 {
	if m != nil && m.DaiHua != nil {
		return *m.DaiHua
	}
	return 0
}

func (m *TableCfg) GetFengLing() int32 {
	if m != nil && m.FengLing != nil {
		return *m.FengLing
	}
	return 0
}

func (m *TableCfg) GetBaoTing() int32 {
	if m != nil && m.BaoTing != nil {
		return *m.BaoTing
	}
	return 0
}

func (m *TableCfg) GetWuHuaGuo() int32 {
	if m != nil && m.WuHuaGuo != nil {
		return *m.WuHuaGuo
	}
	return 0
}

func (m *TableCfg) GetPayWay() int32 {
	if m != nil && m.PayWay != nil {
		return *m.PayWay
	}
	return 0
}

// 积分变化信息
type ScoreChange struct {
	SeatID           *int32 `protobuf:"varint,1,req,name=seatID" json:"seatID,omitempty"`
	Sign             *int32 `protobuf:"varint,2,req,name=sign" json:"sign,omitempty"`
	Value            *int32 `protobuf:"varint,3,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ScoreChange) Reset()                    { *m = ScoreChange{} }
func (m *ScoreChange) String() string            { return proto.CompactTextString(m) }
func (*ScoreChange) ProtoMessage()               {}
func (*ScoreChange) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *ScoreChange) GetSeatID() int32 {
	if m != nil && m.SeatID != nil {
		return *m.SeatID
	}
	return 0
}

func (m *ScoreChange) GetSign() int32 {
	if m != nil && m.Sign != nil {
		return *m.Sign
	}
	return 0
}

func (m *ScoreChange) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

// 位置结算信息
type SeatResult struct {
	SeatID           *int32   `protobuf:"varint,1,req,name=seatID" json:"seatID,omitempty"`
	IsWinner         *int32   `protobuf:"varint,2,req,name=isWinner" json:"isWinner,omitempty"`
	PxInfo           []string `protobuf:"bytes,3,rep,name=pxInfo" json:"pxInfo,omitempty"`
	FanCt            *int32   `protobuf:"varint,4,opt,name=fanCt" json:"fanCt,omitempty"`
	Score            *int32   `protobuf:"varint,5,opt,name=score" json:"score,omitempty"`
	HuSeq            *int32   `protobuf:"varint,6,opt,name=huSeq" json:"huSeq,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SeatResult) Reset()                    { *m = SeatResult{} }
func (m *SeatResult) String() string            { return proto.CompactTextString(m) }
func (*SeatResult) ProtoMessage()               {}
func (*SeatResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *SeatResult) GetSeatID() int32 {
	if m != nil && m.SeatID != nil {
		return *m.SeatID
	}
	return 0
}

func (m *SeatResult) GetIsWinner() int32 {
	if m != nil && m.IsWinner != nil {
		return *m.IsWinner
	}
	return 0
}

func (m *SeatResult) GetPxInfo() []string {
	if m != nil {
		return m.PxInfo
	}
	return nil
}

func (m *SeatResult) GetFanCt() int32 {
	if m != nil && m.FanCt != nil {
		return *m.FanCt
	}
	return 0
}

func (m *SeatResult) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *SeatResult) GetHuSeq() int32 {
	if m != nil && m.HuSeq != nil {
		return *m.HuSeq
	}
	return 0
}

// 位置游戏结算信息
type GameResult struct {
	SeatID           *int32 `protobuf:"varint,1,req,name=seatID" json:"seatID,omitempty"`
	Zimo             *int32 `protobuf:"varint,2,opt,name=zimo" json:"zimo,omitempty"`
	Jiepao           *int32 `protobuf:"varint,3,opt,name=jiepao" json:"jiepao,omitempty"`
	Dianpao          *int32 `protobuf:"varint,4,opt,name=dianpao" json:"dianpao,omitempty"`
	Angang           *int32 `protobuf:"varint,5,opt,name=angang" json:"angang,omitempty"`
	Minggang         *int32 `protobuf:"varint,6,opt,name=minggang" json:"minggang,omitempty"`
	Chadajiao        *int32 `protobuf:"varint,7,opt,name=chadajiao" json:"chadajiao,omitempty"`
	Chahuazhu        *int32 `protobuf:"varint,8,opt,name=chahuazhu" json:"chahuazhu,omitempty"`
	IsWinner         *int32 `protobuf:"varint,9,opt,name=isWinner" json:"isWinner,omitempty"`
	Score            *int32 `protobuf:"varint,10,opt,name=score" json:"score,omitempty"`
	MaxWinner        *int32 `protobuf:"varint,11,opt,name=maxWinner" json:"maxWinner,omitempty"`
	MaxPaoshou       *int32 `protobuf:"varint,12,opt,name=maxPaoshou" json:"maxPaoshou,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GameResult) Reset()                    { *m = GameResult{} }
func (m *GameResult) String() string            { return proto.CompactTextString(m) }
func (*GameResult) ProtoMessage()               {}
func (*GameResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *GameResult) GetSeatID() int32 {
	if m != nil && m.SeatID != nil {
		return *m.SeatID
	}
	return 0
}

func (m *GameResult) GetZimo() int32 {
	if m != nil && m.Zimo != nil {
		return *m.Zimo
	}
	return 0
}

func (m *GameResult) GetJiepao() int32 {
	if m != nil && m.Jiepao != nil {
		return *m.Jiepao
	}
	return 0
}

func (m *GameResult) GetDianpao() int32 {
	if m != nil && m.Dianpao != nil {
		return *m.Dianpao
	}
	return 0
}

func (m *GameResult) GetAngang() int32 {
	if m != nil && m.Angang != nil {
		return *m.Angang
	}
	return 0
}

func (m *GameResult) GetMinggang() int32 {
	if m != nil && m.Minggang != nil {
		return *m.Minggang
	}
	return 0
}

func (m *GameResult) GetChadajiao() int32 {
	if m != nil && m.Chadajiao != nil {
		return *m.Chadajiao
	}
	return 0
}

func (m *GameResult) GetChahuazhu() int32 {
	if m != nil && m.Chahuazhu != nil {
		return *m.Chahuazhu
	}
	return 0
}

func (m *GameResult) GetIsWinner() int32 {
	if m != nil && m.IsWinner != nil {
		return *m.IsWinner
	}
	return 0
}

func (m *GameResult) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *GameResult) GetMaxWinner() int32 {
	if m != nil && m.MaxWinner != nil {
		return *m.MaxWinner
	}
	return 0
}

func (m *GameResult) GetMaxPaoshou() int32 {
	if m != nil && m.MaxPaoshou != nil {
		return *m.MaxPaoshou
	}
	return 0
}

// 牌桌聊天
type ChatInfo struct {
	SeatID           *int32  `protobuf:"varint,1,req,name=seatID" json:"seatID,omitempty"`
	Content          *string `protobuf:"bytes,2,req,name=content" json:"content,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChatInfo) Reset()                    { *m = ChatInfo{} }
func (m *ChatInfo) String() string            { return proto.CompactTextString(m) }
func (*ChatInfo) ProtoMessage()               {}
func (*ChatInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *ChatInfo) GetSeatID() int32 {
	if m != nil && m.SeatID != nil {
		return *m.SeatID
	}
	return 0
}

func (m *ChatInfo) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

// 世界聊天
type WordChat struct {
	UID              *int32  `protobuf:"varint,1,req,name=uID" json:"uID,omitempty"`
	NickName         *string `protobuf:"bytes,2,req,name=nickName" json:"nickName,omitempty"`
	Type             *int32  `protobuf:"varint,3,req,name=type" json:"type,omitempty"`
	Content          *string `protobuf:"bytes,4,req,name=content" json:"content,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *WordChat) Reset()                    { *m = WordChat{} }
func (m *WordChat) String() string            { return proto.CompactTextString(m) }
func (*WordChat) ProtoMessage()               {}
func (*WordChat) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *WordChat) GetUID() int32 {
	if m != nil && m.UID != nil {
		return *m.UID
	}
	return 0
}

func (m *WordChat) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *WordChat) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *WordChat) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

// 战绩信息
type GameRecord struct {
	Id               *int32         `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	TableId          *int32         `protobuf:"varint,2,req,name=tableId" json:"tableId,omitempty"`
	RecTime          *int32         `protobuf:"varint,3,req,name=recTime" json:"recTime,omitempty"`
	GrItems          []*GameRecItem `protobuf:"bytes,4,rep,name=grItems" json:"grItems,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *GameRecord) Reset()                    { *m = GameRecord{} }
func (m *GameRecord) String() string            { return proto.CompactTextString(m) }
func (*GameRecord) ProtoMessage()               {}
func (*GameRecord) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *GameRecord) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GameRecord) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *GameRecord) GetRecTime() int32 {
	if m != nil && m.RecTime != nil {
		return *m.RecTime
	}
	return 0
}

func (m *GameRecord) GetGrItems() []*GameRecItem {
	if m != nil {
		return m.GrItems
	}
	return nil
}

// 战绩信息item
type GameRecItem struct {
	NickName         *string `protobuf:"bytes,1,req,name=nickName" json:"nickName,omitempty"`
	Score            []int32 `protobuf:"varint,2,rep,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GameRecItem) Reset()                    { *m = GameRecItem{} }
func (m *GameRecItem) String() string            { return proto.CompactTextString(m) }
func (*GameRecItem) ProtoMessage()               {}
func (*GameRecItem) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *GameRecItem) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *GameRecItem) GetScore() []int32 {
	if m != nil {
		return m.Score
	}
	return nil
}

// 牌局回放数据
type RespTableInfoRec struct {
	TableId          *int32       `protobuf:"varint,1,req,name=tableId" json:"tableId,omitempty"`
	Sequence         *int32       `protobuf:"varint,2,req,name=sequence" json:"sequence,omitempty"`
	TableInfoArr     []*TableInfo `protobuf:"bytes,3,rep,name=tableInfoArr" json:"tableInfoArr,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RespTableInfoRec) Reset()                    { *m = RespTableInfoRec{} }
func (m *RespTableInfoRec) String() string            { return proto.CompactTextString(m) }
func (*RespTableInfoRec) ProtoMessage()               {}
func (*RespTableInfoRec) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *RespTableInfoRec) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *RespTableInfoRec) GetSequence() int32 {
	if m != nil && m.Sequence != nil {
		return *m.Sequence
	}
	return 0
}

func (m *RespTableInfoRec) GetTableInfoArr() []*TableInfo {
	if m != nil {
		return m.TableInfoArr
	}
	return nil
}

// 转发外部消息数据
type OuterMsg struct {
	Content          *string `protobuf:"bytes,1,req,name=content" json:"content,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OuterMsg) Reset()                    { *m = OuterMsg{} }
func (m *OuterMsg) String() string            { return proto.CompactTextString(m) }
func (*OuterMsg) ProtoMessage()               {}
func (*OuterMsg) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

func (m *OuterMsg) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*ResponseCmd)(nil), "protobuf.ResponseCmd")
	proto.RegisterType((*RespHead)(nil), "protobuf.RespHead")
	proto.RegisterType((*RespSimple)(nil), "protobuf.RespSimple")
	proto.RegisterType((*RoomInfo)(nil), "protobuf.RoomInfo")
	proto.RegisterType((*PlayerInfo)(nil), "protobuf.PlayerInfo")
	proto.RegisterType((*SeatInfo)(nil), "protobuf.SeatInfo")
	proto.RegisterType((*SeatOpts)(nil), "protobuf.SeatOpts")
	proto.RegisterType((*PGInfo)(nil), "protobuf.PGInfo")
	proto.RegisterType((*SendTip)(nil), "protobuf.SendTip")
	proto.RegisterType((*TableInfo)(nil), "protobuf.TableInfo")
	proto.RegisterType((*ZhuaNiaoInfo)(nil), "protobuf.ZhuaNiaoInfo")
	proto.RegisterType((*ExecOpt)(nil), "protobuf.ExecOpt")
	proto.RegisterType((*TableCfg)(nil), "protobuf.TableCfg")
	proto.RegisterType((*ScoreChange)(nil), "protobuf.ScoreChange")
	proto.RegisterType((*SeatResult)(nil), "protobuf.SeatResult")
	proto.RegisterType((*GameResult)(nil), "protobuf.GameResult")
	proto.RegisterType((*ChatInfo)(nil), "protobuf.ChatInfo")
	proto.RegisterType((*WordChat)(nil), "protobuf.WordChat")
	proto.RegisterType((*GameRecord)(nil), "protobuf.GameRecord")
	proto.RegisterType((*GameRecItem)(nil), "protobuf.GameRecItem")
	proto.RegisterType((*RespTableInfoRec)(nil), "protobuf.RespTableInfoRec")
	proto.RegisterType((*OuterMsg)(nil), "protobuf.OuterMsg")
	proto.RegisterEnum("protobuf.RespSimple_SimpleTag", RespSimple_SimpleTag_name, RespSimple_SimpleTag_value)
}

func init() { proto.RegisterFile("response.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 2121 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x58, 0xdd, 0x6e, 0xe3, 0xc6,
	0x15, 0x86, 0x24, 0x4b, 0xa2, 0x46, 0xb6, 0x23, 0x73, 0x7f, 0xca, 0xa6, 0x41, 0xb0, 0x20, 0x82,
	0x22, 0x68, 0x0b, 0xb7, 0x35, 0x8a, 0x16, 0x08, 0x0a, 0x14, 0xa9, 0xe4, 0x7a, 0x85, 0xac, 0x7f,
	0x96, 0xd2, 0x76, 0xd1, 0xdc, 0x18, 0x63, 0x71, 0x24, 0x31, 0x96, 0x48, 0xae, 0x48, 0x66, 0xd7,
	0x7b, 0xd7, 0x17, 0xc8, 0x45, 0x2f, 0x7b, 0xd9, 0x67, 0x28, 0xd0, 0xab, 0xf6, 0x01, 0xfa, 0x18,
	0x79, 0x92, 0x9e, 0x9f, 0x99, 0xe1, 0xd0, 0xf0, 0x06, 0xbd, 0xd2, 0x7c, 0xe7, 0x9c, 0xe1, 0x9c,
	0xff, 0x39, 0x23, 0x71, 0xb8, 0x53, 0x45, 0x9e, 0xa5, 0x85, 0x3a, 0xce, 0x77, 0x59, 0x99, 0xf9,
	0x1e, 0xfd, 0xdc, 0x54, 0xcb, 0xf0, 0xfb, 0xb6, 0x18, 0x46, 0x9a, 0x39, 0xde, 0xc6, 0xfe, 0x4f,
	0xc5, 0xde, 0x5a, 0xc9, 0x38, 0x68, 0x3d, 0x6b, 0x7f, 0x3e, 0x3c, 0xf1, 0x8f, 0x8d, 0xe0, 0x31,
	0x0a, 0x3d, 0x07, 0x4e, 0x44, 0x7c, 0xff, 0x17, 0xa2, 0x57, 0x24, 0xdb, 0x7c, 0xa3, 0x82, 0xf6,
	0xb3, 0x16, 0x48, 0x3e, 0x6e, 0x4a, 0xce, 0x88, 0x17, 0x69, 0x19, 0xff, 0x37, 0x42, 0xe4, 0x1b,
	0x79, 0xa7, 0x76, 0xd3, 0x74, 0x99, 0x05, 0x9d, 0xfb, 0x3b, 0xae, 0x2c, 0x2f, 0x72, 0xe4, 0xfc,
	0x5f, 0x8b, 0x41, 0x29, 0x6f, 0x36, 0x8a, 0x36, 0xed, 0xd1, 0xa6, 0x47, 0xf5, 0xa6, 0xb9, 0x61,
	0x45, 0xb5, 0x94, 0x7f, 0x2c, 0xbc, 0xc5, 0x5a, 0x96, 0xb4, 0xa3, 0x4b, 0x3b, 0x1c, 0x13, 0xc6,
	0x9a, 0x13, 0x59, 0x19, 0x94, 0x7f, 0x9b, 0xed, 0x62, 0xe4, 0x04, 0xbd, 0xfb, 0xf2, 0xaf, 0x35,
	0x27, 0xb2, 0x32, 0x68, 0xc8, 0x4a, 0x6e, 0x55, 0xa4, 0x16, 0x40, 0x09, 0xfa, 0xcf, 0x3a, 0x4d,
	0x43, 0xce, 0x2c, 0x2f, 0x72, 0xe4, 0xc2, 0x7f, 0xb4, 0x84, 0x67, 0xfc, 0xe7, 0x8f, 0x44, 0xa7,
	0x4a, 0xd8, 0xc1, 0xdd, 0x08, 0x97, 0xfe, 0x63, 0xd1, 0xdd, 0x16, 0xab, 0xe9, 0x04, 0x5c, 0x89,
	0x34, 0x06, 0x28, 0x27, 0xf3, 0x1c, 0x9c, 0xd5, 0xfe, 0x7c, 0x10, 0xe1, 0xd2, 0x0f, 0x44, 0x7f,
	0x2d, 0x37, 0x9b, 0xf3, 0x62, 0x45, 0xde, 0x18, 0x44, 0x06, 0x22, 0x07, 0x23, 0x3c, 0x9d, 0x14,
	0x60, 0x35, 0x7e, 0xc3, 0x40, 0xff, 0xa9, 0xe8, 0xc1, 0xb2, 0xda, 0xa0, 0x79, 0xc8, 0xd0, 0x08,
	0xbf, 0x5e, 0x26, 0x39, 0x58, 0x80, 0xdf, 0xc1, 0x65, 0xf8, 0xaf, 0xb6, 0x10, 0x75, 0xe8, 0xfc,
	0x5f, 0x81, 0x80, 0x5c, 0x91, 0x9a, 0x87, 0x27, 0x9f, 0x3e, 0x14, 0xdd, 0x63, 0xfe, 0x99, 0xcb,
	0x55, 0x84, 0xa2, 0xfe, 0xc7, 0xc2, 0x4b, 0xd2, 0xf2, 0xcf, 0x72, 0x53, 0x71, 0x52, 0x74, 0x23,
	0x8b, 0x91, 0x57, 0x94, 0x3b, 0xe6, 0x75, 0xe8, 0x4c, 0x8b, 0x51, 0x45, 0x90, 0xfb, 0x72, 0xb7,
	0x03, 0xab, 0x3a, 0xa8, 0x22, 0x23, 0xa4, 0x83, 0x0c, 0xd2, 0xbb, 0x40, 0x1f, 0x44, 0x1a, 0x85,
	0xdf, 0xb5, 0xc4, 0xc0, 0x1e, 0xed, 0x7f, 0x24, 0x86, 0xa7, 0x17, 0xf3, 0xd3, 0xe8, 0x7a, 0xfe,
	0xe5, 0x1f, 0x5f, 0x9c, 0x8e, 0x5a, 0xfe, 0x50, 0xf4, 0xe7, 0x97, 0x57, 0xd7, 0xf3, 0xe9, 0xd5,
	0xa8, 0xed, 0xef, 0x0b, 0xef, 0xab, 0xe9, 0xf8, 0xab, 0xeb, 0xcb, 0x57, 0xf3, 0x51, 0xc7, 0x3f,
	0x12, 0x07, 0x93, 0xe9, 0xec, 0x7c, 0x3a, 0x9b, 0x69, 0xe9, 0x3d, 0xdf, 0x17, 0x87, 0x86, 0x14,
	0x9d, 0xce, 0x5e, 0xbd, 0x98, 0x8f, 0xba, 0xfe, 0x81, 0x18, 0xbc, 0x9e, 0x5e, 0xe0, 0x17, 0xae,
	0x67, 0xa3, 0x9e, 0x0b, 0xcf, 0x47, 0x7d, 0xf0, 0xdc, 0xfe, 0x15, 0x88, 0xc2, 0xa1, 0xd7, 0xb3,
	0x57, 0xe3, 0xf1, 0xc8, 0x0b, 0xff, 0x89, 0xe1, 0xcd, 0xb2, 0x2d, 0x65, 0x14, 0x3a, 0x1c, 0xd7,
	0x26, 0xc2, 0x1a, 0xa1, 0x07, 0x70, 0x75, 0x01, 0x59, 0x41, 0x71, 0x06, 0x0f, 0x18, 0xec, 0x7f,
	0x22, 0x06, 0x37, 0xb2, 0x50, 0xe7, 0x59, 0xaa, 0xee, 0x74, 0xc0, 0x6b, 0x02, 0xee, 0xdc, 0x26,
	0x29, 0x33, 0xf7, 0x78, 0xa7, 0xc1, 0xb8, 0x93, 0x0b, 0xe6, 0xa2, 0xda, 0xea, 0xd0, 0xd7, 0x04,
	0xe4, 0xee, 0x64, 0x02, 0x85, 0xbd, 0x86, 0x50, 0xf7, 0xc8, 0x89, 0x35, 0x21, 0xfc, 0x42, 0x88,
	0xba, 0xf0, 0x1e, 0x48, 0x4b, 0x38, 0x37, 0x4d, 0x16, 0xb7, 0xae, 0xc6, 0x06, 0x87, 0xdf, 0xef,
	0x09, 0x6f, 0xa6, 0x74, 0x11, 0x35, 0xab, 0xbb, 0xf5, 0x7f, 0x56, 0x37, 0x86, 0x17, 0xbf, 0x10,
	0xeb, 0xb4, 0xd7, 0x08, 0xab, 0xa1, 0x28, 0x65, 0xa9, 0xc8, 0x11, 0x50, 0x0d, 0x04, 0x20, 0x4e,
	0x7b, 0x15, 0xea, 0xc7, 0x89, 0x4f, 0x6b, 0x34, 0x6f, 0x2d, 0xd3, 0x78, 0x2c, 0x77, 0x71, 0x41,
	0x39, 0x02, 0xc6, 0x5b, 0x02, 0xaa, 0x9f, 0x55, 0x25, 0x33, 0x7b, 0xc4, 0xb4, 0xd8, 0xff, 0x99,
	0xe8, 0xe7, 0x2b, 0xd4, 0xa2, 0xd0, 0x35, 0x3c, 0x72, 0xd4, 0x3d, 0x23, 0x55, 0x8d, 0x00, 0xb6,
	0x08, 0xd4, 0xec, 0x32, 0x2f, 0x8b, 0xc0, 0xbb, 0xdf, 0x22, 0x66, 0x9a, 0x13, 0x59, 0x19, 0xff,
	0x53, 0x21, 0xca, 0xf5, 0x4e, 0x29, 0x3e, 0x79, 0x40, 0x27, 0x3b, 0x14, 0xd4, 0xfa, 0x4d, 0xa5,
	0x66, 0x77, 0x45, 0xa9, 0xb6, 0x81, 0x60, 0xad, 0x2d, 0xc1, 0x70, 0xd5, 0x46, 0x2d, 0xca, 0x60,
	0x48, 0x55, 0x54, 0x13, 0xc8, 0x37, 0xd0, 0x51, 0x54, 0xb0, 0x4f, 0xfb, 0x18, 0xf8, 0xcf, 0xc4,
	0xb0, 0x20, 0x3e, 0x1f, 0x79, 0x40, 0x3c, 0x97, 0x84, 0xbe, 0x5e, 0x57, 0xf3, 0xbb, 0x5c, 0x05,
	0x87, 0xf4, 0x49, 0x8d, 0xb0, 0x6f, 0x64, 0xcb, 0xe5, 0x26, 0x49, 0x55, 0xf0, 0x11, 0x31, 0x0c,
	0xc4, 0x93, 0xd6, 0x55, 0xa1, 0xde, 0x04, 0x23, 0xa2, 0x33, 0x40, 0xed, 0xca, 0x24, 0x5d, 0xf1,
	0x39, 0x47, 0xac, 0xbb, 0x25, 0xe0, 0xd7, 0x6e, 0xaa, 0xe7, 0x95, 0x1c, 0x97, 0x81, 0xcf, 0x5f,
	0xd3, 0x10, 0x63, 0xb1, 0x86, 0x05, 0x6d, 0x7b, 0xc4, 0xb1, 0x30, 0x18, 0x77, 0xe1, 0x27, 0xae,
	0x64, 0x12, 0x3c, 0x86, 0x5d, 0x5e, 0x64, 0x60, 0xf8, 0xb7, 0x36, 0x27, 0x19, 0xb9, 0x15, 0x12,
	0x20, 0x57, 0xe9, 0x8a, 0xd2, 0xcb, 0x8b, 0x68, 0x8d, 0xb4, 0x95, 0x04, 0x5a, 0x9b, 0x69, 0xb8,
	0xf6, 0x0f, 0x45, 0x7b, 0x5d, 0x51, 0x8f, 0xf1, 0x22, 0x58, 0x61, 0x5e, 0x2f, 0xd6, 0x09, 0xe5,
	0x8d, 0x17, 0xe1, 0x12, 0x25, 0x6e, 0x2a, 0xba, 0x1d, 0x40, 0xe2, 0xa6, 0x42, 0xe7, 0x2c, 0x64,
	0xba, 0x50, 0x3b, 0xba, 0x01, 0xbc, 0x48, 0x23, 0x54, 0x1a, 0x4f, 0x41, 0x2d, 0x29, 0x4b, 0x40,
	0x69, 0x83, 0x91, 0x87, 0xa7, 0x11, 0xcf, 0x63, 0x9e, 0xc1, 0xec, 0x6c, 0xe2, 0x0c, 0x8c, 0xb3,
	0x89, 0x0e, 0x86, 0xc2, 0xf1, 0xc4, 0xe0, 0xb0, 0x1b, 0x88, 0x3b, 0x6e, 0x78, 0xc7, 0x90, 0x3b,
	0x20, 0x23, 0xb4, 0x0f, 0x7d, 0x01, 0xd1, 0x26, 0xfb, 0x70, 0x1d, 0x9e, 0x88, 0x1e, 0x67, 0x28,
	0x71, 0x31, 0xa4, 0x5c, 0xb2, 0xb4, 0xc6, 0xb0, 0x2d, 0xc8, 0xcb, 0x6d, 0x4e, 0x10, 0x02, 0xe1,
	0x5b, 0xd1, 0x9f, 0xa9, 0x34, 0x9e, 0x27, 0x39, 0x35, 0x62, 0xc5, 0x25, 0xa2, 0x37, 0x5a, 0x4c,
	0xf7, 0x4b, 0x35, 0x76, 0xb6, 0x1b, 0xc8, 0xf1, 0x9b, 0x61, 0xb2, 0x15, 0xe0, 0x5a, 0x1d, 0x3f,
	0xc6, 0xd4, 0xd8, 0xd4, 0x56, 0x26, 0x29, 0x84, 0x9d, 0x1b, 0xb8, 0xc5, 0xe1, 0x77, 0x9e, 0x18,
	0xd8, 0x7b, 0xda, 0xb6, 0xc6, 0x09, 0x05, 0xd1, 0xb4, 0xc6, 0x09, 0x65, 0x00, 0x09, 0x99, 0x1b,
	0xd0, 0x40, 0xca, 0x37, 0x5c, 0x52, 0x0f, 0xe2, 0x7b, 0xa3, 0x26, 0x60, 0xa5, 0xed, 0x94, 0x84,
	0x5e, 0x38, 0x4f, 0x80, 0xbd, 0x47, 0x5b, 0x1d, 0x4a, 0xdd, 0x49, 0xba, 0x0f, 0x75, 0x92, 0x9e,
	0xd3, 0x49, 0x74, 0x8d, 0x53, 0xff, 0xe2, 0x86, 0x70, 0xaf, 0xc6, 0x79, 0x6c, 0x30, 0x32, 0x58,
	0x71, 0x8b, 0x6a, 0x57, 0xce, 0x72, 0x25, 0x6f, 0x21, 0x6f, 0x3c, 0x32, 0xc7, 0x25, 0xf9, 0x3f,
	0x17, 0x7d, 0xf5, 0x4e, 0x2d, 0x20, 0x75, 0x29, 0x0b, 0x86, 0x27, 0x47, 0xf5, 0x07, 0x4f, 0x99,
	0x11, 0x19, 0x09, 0x74, 0x40, 0x4c, 0xa7, 0x4c, 0x20, 0x33, 0xa8, 0x70, 0x34, 0x6c, 0x38, 0x97,
	0xbb, 0x81, 0xc5, 0x68, 0xc8, 0x72, 0x93, 0xbd, 0xa5, 0xec, 0x80, 0xf8, 0xe3, 0x1a, 0x5b, 0x31,
	0x5f, 0xf0, 0x2f, 0x92, 0xa2, 0xa4, 0x4e, 0xd0, 0x68, 0xc5, 0xf8, 0xd5, 0x88, 0xf8, 0x91, 0x23,
	0x57, 0x4f, 0x35, 0x34, 0x28, 0x1c, 0xfe, 0xd0, 0xae, 0x5a, 0x0e, 0xc3, 0x89, 0x08, 0x34, 0xe3,
	0xde, 0xa1, 0x11, 0x86, 0x65, 0x09, 0xb5, 0xa0, 0x0d, 0xe2, 0xfe, 0xe1, 0x50, 0xfc, 0x50, 0xec,
	0x6f, 0x64, 0x51, 0xce, 0x4c, 0x1a, 0x1e, 0x91, 0x44, 0x83, 0xe6, 0xff, 0x56, 0x0c, 0xcb, 0xac,
	0x94, 0x1b, 0xad, 0x92, 0xff, 0xf0, 0xa0, 0x45, 0x2a, 0xb9, 0x82, 0xfe, 0xef, 0xa0, 0x15, 0x62,
	0x5a, 0xc2, 0xb0, 0x96, 0xae, 0x14, 0xf5, 0x9a, 0xe1, 0xc9, 0x13, 0xc7, 0x94, 0x9a, 0x19, 0xb9,
	0x92, 0x98, 0x01, 0x94, 0x58, 0xe3, 0xe5, 0x8a, 0xda, 0x50, 0x23, 0x03, 0xe6, 0x9a, 0x13, 0x59,
	0x19, 0xff, 0x0b, 0xb1, 0xff, 0x1e, 0x5a, 0xd8, 0x45, 0x22, 0x33, 0xca, 0x9a, 0x27, 0xb4, 0xe7,
	0x69, 0xbd, 0xe7, 0x6b, 0x87, 0x1b, 0x35, 0x64, 0x6d, 0x56, 0x53, 0xda, 0x3e, 0xe5, 0x1e, 0x6f,
	0x09, 0xe4, 0x9e, 0x44, 0xa6, 0xb8, 0x1f, 0x1a, 0x4a, 0x19, 0xfc, 0x48, 0xbb, 0xc7, 0xa1, 0xc1,
	0x64, 0x2c, 0x0a, 0x2e, 0x68, 0x1c, 0x8f, 0x02, 0xb2, 0xf2, 0xc8, 0x0d, 0x18, 0xf1, 0x22, 0x47,
	0x08, 0x53, 0x36, 0x87, 0x90, 0xab, 0xb4, 0x84, 0xfb, 0x37, 0x0e, 0x7e, 0xcc, 0x29, 0xeb, 0x90,
	0xfc, 0xcf, 0xc4, 0x81, 0x85, 0x54, 0x70, 0x1f, 0x53, 0x85, 0x34, 0x89, 0x98, 0xab, 0xdf, 0xca,
	0x4d, 0x82, 0xf3, 0xc6, 0x4f, 0x38, 0x57, 0x35, 0x34, 0x71, 0xc5, 0xf8, 0x4d, 0x64, 0x29, 0x83,
	0x4f, 0xea, 0xb8, 0x1a, 0x5a, 0x38, 0x17, 0xfb, 0xae, 0x63, 0x50, 0xab, 0x14, 0xd6, 0xc8, 0x47,
	0x4b, 0x5a, 0x7c, 0x75, 0x39, 0x24, 0xfc, 0xea, 0xfb, 0x75, 0x96, 0xae, 0x70, 0x0b, 0x8a, 0x70,
	0x67, 0x6a, 0xd0, 0xc2, 0x7f, 0xb7, 0x44, 0x5f, 0x17, 0x15, 0x3a, 0x37, 0xcb, 0xcb, 0x19, 0x4f,
	0x16, 0xdc, 0x67, 0x6a, 0x02, 0x5d, 0x78, 0x79, 0x49, 0x37, 0x61, 0x5b, 0x5f, 0x78, 0x0c, 0x35,
	0x87, 0x14, 0xef, 0x58, 0x0e, 0x42, 0xfd, 0xc5, 0x89, 0x2a, 0x65, 0xb2, 0xa1, 0x7b, 0x84, 0xbf,
	0xc8, 0x04, 0xf4, 0x5a, 0x0c, 0xa1, 0xb9, 0x92, 0x99, 0x3e, 0xb3, 0x4b, 0x12, 0x4d, 0x22, 0x8d,
	0x2a, 0x55, 0xfe, 0x6e, 0x4a, 0x56, 0xf6, 0xf4, 0xa8, 0x62, 0x08, 0xe1, 0x7f, 0xba, 0xc2, 0x33,
	0x39, 0x56, 0x67, 0x47, 0xdd, 0xdb, 0x6b, 0x02, 0x5d, 0x4a, 0x34, 0x43, 0x41, 0x66, 0x70, 0xb3,
	0xb4, 0xd8, 0x29, 0x48, 0x1e, 0x9d, 0x4c, 0x41, 0xea, 0xf1, 0x92, 0x72, 0xdf, 0x18, 0x60, 0x09,
	0xf4, 0x76, 0xc8, 0x6e, 0xb2, 0x12, 0xb6, 0xb1, 0xea, 0x06, 0xe2, 0x3e, 0xb4, 0x22, 0x97, 0xd9,
	0xf3, 0x8a, 0xda, 0x25, 0xec, 0xb3, 0x04, 0x3c, 0xed, 0x7d, 0xb2, 0x45, 0x56, 0x9f, 0xcb, 0x9f,
	0x11, 0x6a, 0x58, 0x82, 0x50, 0x9c, 0x00, 0x87, 0x1b, 0xa3, 0xc5, 0xf8, 0xc5, 0x5b, 0xb5, 0xae,
	0x5e, 0x26, 0x71, 0x95, 0xe8, 0xdb, 0xb1, 0x26, 0xd0, 0xec, 0x03, 0x92, 0xab, 0x33, 0xbc, 0xd3,
	0x85, 0x9e, 0x7d, 0x0c, 0x01, 0xdb, 0x8a, 0xa9, 0x22, 0xdb, 0x0c, 0x1d, 0x0a, 0xf2, 0xef, 0x92,
	0x73, 0xf9, 0xb2, 0xc2, 0x3a, 0xd1, 0x4d, 0xd1, 0xa1, 0xa0, 0x9d, 0x5b, 0x95, 0xbe, 0xc4, 0xfb,
	0xf4, 0x80, 0xed, 0xd4, 0x10, 0x39, 0x3a, 0xc7, 0xf5, 0x78, 0x64, 0x20, 0xd9, 0x12, 0xbf, 0xf9,
	0xba, 0x4a, 0x6c, 0x93, 0xb3, 0x18, 0xcf, 0xbb, 0x55, 0x57, 0x4a, 0xab, 0xab, 0xdb, 0x5c, 0x4d,
	0xc1, 0xc4, 0xb8, 0x95, 0x60, 0xf4, 0x0c, 0x8e, 0x27, 0x11, 0xee, 0x73, 0x4d, 0x22, 0x4a, 0xdd,
	0x65, 0x15, 0x2e, 0xff, 0x92, 0x55, 0x7f, 0x52, 0xa9, 0x9e, 0x9c, 0x9a, 0x44, 0xf4, 0xcc, 0x02,
	0x2e, 0x36, 0x2e, 0xdd, 0x47, 0xec, 0x19, 0x4b, 0xc0, 0x48, 0xc4, 0xf8, 0x51, 0x49, 0x9d, 0x0b,
	0x22, 0xc1, 0x08, 0xb5, 0x5f, 0x82, 0x36, 0x2f, 0xd0, 0xe4, 0x27, 0xac, 0xbd, 0xc1, 0x34, 0xab,
	0xc9, 0x6c, 0x8e, 0xac, 0xa7, 0x7a, 0x56, 0x63, 0x88, 0xbb, 0xde, 0xe2, 0xd8, 0x76, 0x56, 0x65,
	0xba, 0xf7, 0x58, 0x8c, 0x27, 0x5d, 0xc9, 0xbb, 0xd7, 0xf2, 0x0e, 0x7a, 0x0e, 0x9d, 0x94, 0x13,
	0x0a, 0x2f, 0xc5, 0xd0, 0xe9, 0xac, 0x76, 0xb4, 0x9f, 0x98, 0x37, 0x10, 0x23, 0xbc, 0xb1, 0x8a,
	0x64, 0x95, 0xea, 0xc4, 0xa5, 0x35, 0x5e, 0xd2, 0xdf, 0xea, 0x67, 0x21, 0x5d, 0xd2, 0x04, 0xc2,
	0xbf, 0xb7, 0x84, 0xa8, 0xaf, 0x9d, 0x0f, 0x7e, 0x10, 0x9f, 0x9c, 0xc5, 0xeb, 0x24, 0x4d, 0xd5,
	0xce, 0x54, 0x83, 0xc1, 0xb8, 0x07, 0xea, 0x8b, 0xff, 0x6f, 0xa0, 0xe7, 0x23, 0x23, 0x3c, 0x10,
	0x2e, 0x23, 0x1a, 0x56, 0x68, 0xb2, 0x25, 0x50, 0x4f, 0xd6, 0x5c, 0x03, 0x7a, 0xb2, 0xa6, 0x29,
	0x78, 0x06, 0x53, 0x70, 0xcf, 0x4c, 0xc1, 0x00, 0xc2, 0xff, 0xc2, 0x4b, 0xf9, 0xac, 0x71, 0x0f,
	0x7e, 0xc8, 0x5a, 0x2c, 0x09, 0xdd, 0x68, 0x68, 0x8d, 0xb2, 0xdf, 0x24, 0x0a, 0x0a, 0x48, 0x37,
	0x19, 0x8d, 0x68, 0x02, 0xe0, 0xca, 0xd2, 0x6a, 0x19, 0x88, 0x3b, 0xc0, 0xa7, 0x98, 0x3f, 0xac,
	0x99, 0x46, 0xfa, 0x55, 0xb8, 0x22, 0x0e, 0x6b, 0x67, 0x31, 0xa5, 0xcb, 0x5a, 0xc6, 0xf2, 0x1b,
	0xa8, 0x0c, 0x5d, 0x9d, 0x35, 0x41, 0x73, 0xa1, 0x70, 0xa0, 0x78, 0x74, 0x85, 0xd6, 0x84, 0x86,
	0x4b, 0x07, 0xfa, 0x15, 0x6f, 0x5c, 0x6a, 0x9d, 0x24, 0x5c, 0x27, 0xc1, 0xf7, 0xb6, 0xf2, 0x9d,
	0xde, 0xa2, 0x9f, 0x2c, 0x96, 0x80, 0x65, 0x02, 0x00, 0x3a, 0x61, 0xb1, 0xce, 0x2a, 0x53, 0x96,
	0x35, 0x25, 0xfc, 0xbd, 0xf0, 0xcc, 0xff, 0x32, 0x1f, 0xf4, 0x24, 0x4e, 0xce, 0x19, 0xdc, 0x40,
	0x69, 0xa9, 0x1f, 0xa2, 0x06, 0x86, 0x4b, 0xe1, 0x99, 0x7f, 0x69, 0xe8, 0x05, 0x6b, 0xb7, 0xe2,
	0xf2, 0x87, 0x5e, 0xb0, 0x76, 0x7a, 0xee, 0x38, 0xd3, 0xb3, 0x73, 0xce, 0x5e, 0xf3, 0x9c, 0xbf,
	0xb6, 0x4c, 0xc8, 0xf1, 0x0f, 0x1d, 0x7c, 0x42, 0xd8, 0xb7, 0x32, 0xac, 0xea, 0x09, 0x36, 0x6e,
	0x4e, 0xb0, 0x31, 0xff, 0x33, 0xb3, 0xa0, 0x9b, 0xbe, 0x63, 0xfe, 0x99, 0x21, 0xe8, 0xff, 0x52,
	0xf4, 0x57, 0xbb, 0x29, 0xbc, 0xf9, 0x0a, 0x1a, 0x9b, 0x1b, 0x63, 0x8a, 0x3e, 0x0a, 0xb9, 0x91,
	0x91, 0x0a, 0xff, 0x20, 0x86, 0x0e, 0xbd, 0x61, 0x5c, 0xeb, 0x9e, 0x71, 0x36, 0x50, 0x6d, 0xe7,
	0x9d, 0x88, 0x46, 0x8c, 0xf0, 0xef, 0x9b, 0xfa, 0x9f, 0x33, 0xb5, 0x70, 0x55, 0x6f, 0x35, 0x55,
	0xa7, 0xa7, 0x02, 0xbc, 0x3d, 0xe1, 0x31, 0x64, 0x8a, 0xcb, 0x60, 0x98, 0xb3, 0xf6, 0xed, 0x9f,
	0x6e, 0x78, 0xa5, 0x75, 0xc8, 0x82, 0x07, 0xff, 0x9d, 0x6b, 0x08, 0x86, 0x9f, 0x09, 0xef, 0xb2,
	0x82, 0xb6, 0xa5, 0xff, 0xb5, 0x32, 0xee, 0x6e, 0x35, 0xdc, 0xfd, 0xbf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x31, 0x11, 0xda, 0x57, 0xb0, 0x14, 0x00, 0x00,
}
